{
    "meta": {
        "format": "1"
    },
    "steps": {
        "cedar.dynamics.NeuralField": {
            "name": "Above Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Above Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Action: Find the reference",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Action: Find the relation ",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Action: Find the target",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Action: Imagine",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Action: True\/False",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Attention",
            "activation as output": "true",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "3",
            "sizes": [
                "50",
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-5.4000000000000039",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "3",
                    "anchor": [
                        "0",
                        "0",
                        "0"
                    ],
                    "amplitude": "1.5",
                    "sigmas": [
                        "2",
                        "2",
                        "2"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0",
                        "0"
                    ],
                    "limit": "5"
                },
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "3",
                    "anchor": [
                        "0",
                        "0",
                        "0"
                    ],
                    "amplitude": "-0.80000000000000004",
                    "sigmas": [
                        "5",
                        "5",
                        "5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.FFTW"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "3",
                "anchor": [
                    "0",
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3",
                    "3"
                ],
                "normalize": "false",
                "shifts": [
                    "0",
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Below Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Below Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Colour",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-7.9999999999999911",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.099999999999999992",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "sigmas": [
                        "2.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "false",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 10",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 11",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 12",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 13",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 14",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 15",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 16",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 17",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 18",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 19",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 2",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 20",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 21",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 22",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 23",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 24",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 25",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 26",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 27",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 28",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 29",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 3",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 30",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 31",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 32",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 33",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 34",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 35",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 36",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 37",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 38",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 39",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 4",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 40",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 41",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 42",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 43",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 44",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 45",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 46",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 47",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 48",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 49",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 5",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 50",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 51",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 52",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 6",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 7",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 8",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 9",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 2",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 3",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 4",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 5",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 6",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 7",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.sources.ConstMatrix": {
            "name": "Const Matrix 8",
            "sizes": [
                "50",
                "50"
            ],
            "value": "42",
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution 2",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution 3",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution 4",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Find the Reference",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Find the Spatial Relation",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Find the Target",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.Flip": {
            "name": "Flip",
            "flipped dimensions": [
                "true",
                "true"
            ],
            "comments": ""
        },
        "cedar.processing.Flip": {
            "name": "Flip 2",
            "flipped dimensions": [
                "false",
                "false"
            ],
            "comments": ""
        },
        "cedar.processing.Flip": {
            "name": "Flip 3",
            "flipped dimensions": [
                "true",
                "true"
            ],
            "comments": ""
        },
        "cedar.processing.Flip": {
            "name": "Flip 4",
            "flipped dimensions": [
                "false",
                "true"
            ],
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 10",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "25"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 11",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "35"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 12",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "45"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 13",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "5"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 14",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "15"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 15",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "25"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 16",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "35"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 17",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "45"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 2",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "35"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 3",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "5"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 4",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "amplitude": "3",
            "centers": [
                "25",
                "25"
            ],
            "sigma": [
                "2",
                "2"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 5",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "5"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 6",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "15"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 7",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "15"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 8",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "25"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 9",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "amplitude": "8.8000000000000007",
            "centers": [
                "45"
            ],
            "sigma": [
                "1.5"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Imagine (Build mental model)",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Indeterminent ",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-0.40000000000000002",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.02",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "2.7999999999999998",
                    "sigmas": [
                        "1.5",
                        "1.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                },
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "-1.8",
                    "sigmas": [
                        "2.1000000000000001",
                        "2.1000000000000001"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Match FIeld",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-9.9999999999999964",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.5",
                        "0.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Mismatch",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-4.9999999999999973",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.0099999999999995804",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.600000000000001",
                    "sigmas": [
                        "3"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Node Center ",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "North-East of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "North-East of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "North-West of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "North-West of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Object-centered ",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-8",
            "input noise gain": "0.5",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.29999999999999999",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "11",
                    "sigmas": [
                        "0.5",
                        "0.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Perception",
            "activation as output": "true",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "3",
            "sizes": [
                "50",
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-1.6999999999999991",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "3",
                    "anchor": [
                        "0",
                        "0",
                        "0"
                    ],
                    "amplitude": "2.5",
                    "sigmas": [
                        "1.5",
                        "1.51",
                        "1.51"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0",
                        "0"
                    ],
                    "limit": "5"
                },
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "3",
                    "anchor": [
                        "0",
                        "0",
                        "0"
                    ],
                    "amplitude": "-0.80000000000000004",
                    "sigmas": [
                        "3.5",
                        "3.5",
                        "3.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.FFTW"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "3",
                "anchor": [
                    "0",
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3",
                    "3"
                ],
                "normalize": "false",
                "shifts": [
                    "0",
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node R-T Find the Target",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node R-T,S IMAGINE",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node R-W",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node S-W",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node T-R Find the Reference",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node T-R-S or R-T-S True False Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition Node T-W",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "50",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection",
            "dimension mapping": {
                "0": "0",
                "1": "1",
                "2": "4294967295"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "50"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 10",
            "dimension mapping": {
                "0": "0",
                "1": "1",
                "2": "4294967295"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 11",
            "dimension mapping": {
                "0": "0",
                "1": "1"
            },
            "output dimensionality": "3",
            "output dimension sizes": [
                "50",
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 16",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 17",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 18",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 19",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 2",
            "dimension mapping": {
                "0": "0",
                "1": "1"
            },
            "output dimensionality": "3",
            "output dimension sizes": [
                "50",
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 20",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 22",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295",
                "2": "0"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "50"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 23",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 24",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 25",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 26",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 28",
            "dimension mapping": {
                "0": "0",
                "1": "1"
            },
            "output dimensionality": "3",
            "output dimension sizes": [
                "50",
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 29",
            "dimension mapping": {
                "0": "0",
                "1": "1"
            },
            "output dimensionality": "3",
            "output dimension sizes": [
                "50",
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 3",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 30",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 31",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 32",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 5",
            "dimension mapping": {
                "0": "2"
            },
            "output dimensionality": "3",
            "output dimension sizes": [
                "50",
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 6",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295",
                "2": "0"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "50"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 7",
            "dimension mapping": {
                "0": "0",
                "1": "1",
                "2": "4294967295"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 8",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 9",
            "dimension mapping": {
                "0": "0",
                "1": "1",
                "2": "4294967295"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "50"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-8",
            "input noise gain": "0.5",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.29999999999999999",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "10.999999999999989",
                    "sigmas": [
                        "0.5",
                        "0.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "false",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Blue Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Blue Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Cyan Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Cyan Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Green Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Green Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Orange Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Orange Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Red Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reference Red Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Reference: Blue",
            "strength": "4.9000000000000004",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Reference: Cyan",
            "strength": "5.0999999999999988",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Reference: Green",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Reference: Orange",
            "strength": "5.0999999999999988",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Reference: Red",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "South-East of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "South-East of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "South-West of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "South-West of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.25",
            "mu r": "1.1000000000000001",
            "sigma r": "3",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 10",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 11",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 12",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 13",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 14",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 15",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 16",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 17",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 18",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 19",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 2",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.25",
            "mu r": "1",
            "sigma r": "2.8999999999999999",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 20",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 21",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 22",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 3",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.25",
            "mu r": "0.40000000000000008",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 4",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.25",
            "mu r": "0.40000000000000008",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 5",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "true",
            "sigma th hor": "0.25",
            "mu r": "1.1000000000000001",
            "sigma r": "3",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 6",
            "size x": "50",
            "size y": "50",
            "invert sides": "true",
            "horizontal pattern": "false",
            "sigma th hor": "0.25",
            "mu r": "1",
            "sigma r": "2.8999999999999999",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 7",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 8",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template 9",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "false",
            "sigma th hor": "0.40000000000000002",
            "mu r": "2",
            "sigma r": "3.5",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template Right",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.20000000000000001",
            "mu r": "0.69999999999999996",
            "sigma r": "2.2000000000000002",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.SpatialTemplate": {
            "name": "Spatial Template Right 2",
            "size x": "50",
            "size y": "50",
            "invert sides": "false",
            "horizontal pattern": "true",
            "sigma th hor": "0.20000000000000001",
            "mu r": "0.69999999999999996",
            "sigma r": "2.2000000000000002",
            "sigma sigmoid fw": "0",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: Above",
            "strength": "5.1000000000000014",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: Below",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: Left",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: North-East",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: North-West",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: Right",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: South-East",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Spatial relation: South-West",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 10",
            "gain factor": "0.50000000000000011",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 104",
            "gain factor": "0.14999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 105",
            "gain factor": "0.14999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 106",
            "gain factor": "0.14999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 107",
            "gain factor": "0.14999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 108",
            "gain factor": "0.14999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 109",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 11",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 110",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 111",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 112",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 113",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 12",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 13",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 14",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 15",
            "gain factor": "-6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 16",
            "gain factor": "0.50000000000000011",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 17",
            "gain factor": "-6.600000000000005",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 18",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 19",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 2",
            "gain factor": "5.7999999999999936",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 20",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 21",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 23",
            "gain factor": "1.2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 24",
            "gain factor": "6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 25",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 26",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 27",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 28",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 29",
            "gain factor": "6.0999999999999996",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 3",
            "gain factor": "5.2999999999999998",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 30",
            "gain factor": "5.1000000000000014",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 31",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 32",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 33",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 35",
            "gain factor": "-3",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 36",
            "gain factor": "-3",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 38",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 4",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 41",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 42",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 43",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 44",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 45",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 5",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 53",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 54",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 55",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 56",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 57",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 6",
            "gain factor": "-8",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 61",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 62",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 63",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 64",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 65",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 66",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 67",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 68",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 7",
            "gain factor": "-8",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 71",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 76",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 77",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 79",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 8",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 81",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 83",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 84",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 85",
            "gain factor": "4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 9",
            "gain factor": "5.0999999999999988",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 97",
            "gain factor": "5",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "50"
            ],
            "time scale": "100",
            "resting level": "-8",
            "input noise gain": "0.5",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.29999999999999999",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "11",
                    "sigmas": [
                        "0.5",
                        "0.5"
                    ],
                    "normalize": "false",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "false",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Blue Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Blue Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Cyan Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Cyan Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Green Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Green Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Orange Memory ",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Orange Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Red Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Target Red Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Target: Blue",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Target: Cyan",
            "strength": "5.0999999999999988",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Target: Green",
            "strength": "5.0999999999999988",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Target: Orange",
            "strength": "5.0999999999999996",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Target: Red",
            "strength": "5.0999999999999988",
            "active": "false",
            "deactivate on reset": "true",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "To the Right of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "To the Right of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.99999999999999989",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "To the left of Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "6.0999999999999996",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "To the left of Production",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "2"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "True \/ False",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Wipe Node",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 13",
            "gain factor": "-6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 14",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 17",
            "gain factor": "-30",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 28",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 29",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 30",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 32",
            "gain factor": "-6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 33",
            "gain factor": "-30",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 34",
            "gain factor": "-30",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 35",
            "gain factor": "-30",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 7",
            "gain factor": "-40",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 8",
            "gain factor": "-6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "new Static Gain 9",
            "gain factor": "5.3999999999999986",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "node 2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "node 3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        }
    },
    "triggers": {
        "cedar.processing.LoopedTrigger": {
            "name": "default trigger",
            "step size": "0.001 s",
            "fake Euler step size": "0.02 s",
            "minimum sleep time": "0.0002 s",
            "idle time": "1e-05 s",
            "simulated time": "0.001 s",
            "loop mode": "Fixed",
            "start with all": "true",
            "listeners": [
                "Perception",
                "Attention",
                "Target Orange Production",
                "Target Cyan Production",
                "Colour",
                "Target Blue Production",
                "Target",
                "Reference",
                "Node Center ",
                "Object-centered ",
                "To the left of Production",
                "Above Production",
                "Below Production",
                "To the Right of Production",
                "Indeterminent ",
                "Target Green Production",
                "Target Red Production",
                "Target Green Memory",
                "Target Cyan Memory",
                "Target Red Memory",
                "Target Blue Memory",
                "Target Orange Memory ",
                "Reference Orange Memory",
                "Reference Green Memory",
                "Reference Red Memory",
                "Reference Cyan Memory",
                "Reference Blue Memory",
                "To the left of Memory",
                "Above Memory",
                "Below Memory",
                "To the Right of Memory",
                "Reference Red Production",
                "Reference Blue Production",
                "Reference Cyan Production",
                "Reference Green Production",
                "Reference Orange Production",
                "Mismatch",
                "Imagine (Build mental model)",
                "Reference Field & Reference Production Nodes",
                "Target Field & Target Production Nodes",
                "Match Field",
                "Match FIeld",
                "Precondition Node T-W",
                "Wipe Node",
                "Find the Spatial Relation",
                "Precondition Node R-T,S IMAGINE",
                "Precondition Node S-W",
                "Spatial Memory Nodes",
                "Find the Target",
                "Find the Reference",
                "True \/ False",
                "Precondition Node R-W",
                "Reference Memory Nodes & Color Field",
                "Reference Memory Nodes & Color Field 2",
                "Condition of  Dissatisfaction ",
                "OC Field and Spatial Production Nodes  ",
                "node 2",
                "node 3",
                "Precondition Node R-T Find the Target",
                "Relational Behavior",
                "Precondition Node T-R Find the Reference",
                "Target Behavior",
                "Reference Behavior",
                "Precondition Node T-R-S or R-T-S True False Task",
                "South-East of Memory",
                "South-East of Production",
                "South-West of Memory",
                "South-West of Production",
                "North-East of Memory",
                "North-East of Production",
                "North-West of Memory",
                "North-West of Production"
            ]
        }
    },
    "groups": {
        "Condition of  Dissatisfaction ": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 34",
                    "gain factor": "5",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 37",
                    "gain factor": "10.6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "10.6",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-10",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "4.4000000000000004",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "2000",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "0",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Main Behavior Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Task True False.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "Static Gain 34.input"
                },
                {
                    "source": "Static Gain 34.output",
                    "target": "Main Behavior.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "node.sigmoided activation",
                    "target": "Static Gain 37.input"
                },
                {
                    "source": "Static Gain 37.output",
                    "target": "CoS node.input"
                }
            ],
            "name": "Condition of  Dissatisfaction ",
            "connectors": {
                "CoS Targ Clone Field": "true",
                "Main Behavior": "false",
                "Main Behavior Input": "true",
                "Task True False": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "Static Gain 34",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1110",
                    "positionY": "120"
                },
                {
                    "type": "step",
                    "step": "Static Gain 37",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "840",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "540",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "630",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Condition of  Dissatisfaction ",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "480",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "480",
                "positionX": "-6750",
                "positionY": "600"
            }
        },
        "Match Field": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost Match Field",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 12",
                    "dimension mapping": {
                        "0": "4294967295",
                        "1": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 14",
                    "dimension mapping": "",
                    "output dimensionality": "2",
                    "output dimension sizes": [
                        "50",
                        "50"
                    ],
                    "compression type": "SUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 22",
                    "gain factor": "4.3000000000000043",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 39",
                    "gain factor": "8",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 47",
                    "gain factor": "1.2",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 2",
                    "gain factor": "2.5",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "4.4000000000000004",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Boost Match Field.sigmoided activation",
                    "target": "Static Gain 39.input"
                },
                {
                    "source": "Static Gain 39.output",
                    "target": "Projection 14.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Boost Match Field.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Projection 14.output",
                    "target": "Mismatch field.input"
                },
                {
                    "source": "Intention .output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Projection 12.output",
                    "target": "Static Gain 22.input"
                },
                {
                    "source": "Static Gain 22.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 47.input"
                },
                {
                    "source": "Static Gain 47.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 2.input"
                },
                {
                    "source": "new Static Gain 2.output",
                    "target": "TargetFieldPrecNodes.input"
                },
                {
                    "source": "CoS Mismatch Field.output",
                    "target": "Projection 12.input"
                },
                {
                    "source": "Wipe CoS.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Task Input.output",
                    "target": "intention node.input"
                }
            ],
            "name": "Match Field",
            "connectors": {
                "CoS Mismatch Field": "true",
                "Intention ": "true",
                "Mismatch field": "false",
                "TargetFieldPrecNodes": "false",
                "Task Input": "true",
                "Wipe CoS": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost Match Field",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "900",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Projection 12",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "660",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Projection 14",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 22",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "750",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Static Gain 39",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1110",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "810",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 47",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "150"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Match Field",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-5250",
                "positionY": "1530"
            }
        },
        "OC Field and Spatial Production Nodes  ": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost OCF",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 21",
                    "dimension mapping": "",
                    "output dimensionality": "2",
                    "output dimension sizes": [
                        "50",
                        "50"
                    ],
                    "compression type": "SUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 27",
                    "dimension mapping": {
                        "0": "4294967295",
                        "1": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 48",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 49",
                    "gain factor": "8",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 50",
                    "gain factor": "4.2000000000000002",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 51",
                    "gain factor": "1.2",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 52",
                    "gain factor": "2.2999999999999998",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 6",
                    "gain factor": "5",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.1999999999999993",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Main Behavior Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 48.input"
                },
                {
                    "source": "Static Gain 48.output",
                    "target": "Boost OCF.input"
                },
                {
                    "source": "Boost OCF.sigmoided activation",
                    "target": "Static Gain 49.input"
                },
                {
                    "source": "Static Gain 49.output",
                    "target": "Projection 21.input"
                },
                {
                    "source": "Projection 21.output",
                    "target": "OCF.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 50.input"
                },
                {
                    "source": "Static Gain 50.output",
                    "target": "Spatial Rel Nodes.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 51.input"
                },
                {
                    "source": "Static Gain 51.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Projection 27.output",
                    "target": "Static Gain 52.input"
                },
                {
                    "source": "Static Gain 52.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS OCF.output",
                    "target": "Projection 27.input"
                },
                {
                    "source": "CoS Left.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Below.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Right.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Above.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS South-East.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS South-West.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS North-East.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS North-West.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 6.input"
                },
                {
                    "source": "new Static Gain 6.output",
                    "target": "Main Behavior.input"
                },
                {
                    "source": "CoS Spatial Memory Nodes.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Imagine Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Wipe.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Find the Target Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Find the Reference Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS True False Task.output",
                    "target": "CoS node.input"
                }
            ],
            "name": "OC Field and Spatial Production Nodes  ",
            "connectors": {
                "CoS Above": "true",
                "CoS Below": "true",
                "CoS Find the Reference Task": "true",
                "CoS Find the Target Task": "true",
                "CoS Imagine Task": "true",
                "CoS Left": "true",
                "CoS North-East": "true",
                "CoS North-West": "true",
                "CoS OCF": "true",
                "CoS Right": "true",
                "CoS South-East": "true",
                "CoS South-West": "true",
                "CoS Spatial Memory Nodes": "true",
                "CoS True False Task": "true",
                "CoS Wipe": "true",
                "Main Behavior": "false",
                "Main Behavior Input": "true",
                "OCF": "false",
                "Spatial Rel Nodes": "false",
                "external input": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost OCF",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "930",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "300"
                },
                {
                    "type": "step",
                    "step": "Projection 21",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1230",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Projection 27",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "600",
                    "positionY": "390"
                },
                {
                    "type": "step",
                    "step": "Static Gain 48",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "840",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 49",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1140",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 50",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1080",
                    "positionY": "150"
                },
                {
                    "type": "step",
                    "step": "Static Gain 51",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "660",
                    "positionY": "300"
                },
                {
                    "type": "step",
                    "step": "Static Gain 52",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "690",
                    "positionY": "390"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "390",
                    "positionY": "300"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1080",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "210"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "300",
                    "positionY": "300"
                }
            ],
            "ui generic": {
                "group": "OC Field and Spatial Production Nodes  ",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "450",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "450",
                "positionX": "-6780",
                "positionY": "0"
            }
        },
        "Reference Behavior": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 10",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 16",
                    "gain factor": "-1",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 19",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 20",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 21",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 31",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 5",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "RefField & Ref ProdNodes.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 5.input"
                },
                {
                    "source": "new Static Gain 5.output",
                    "target": "PrecodintionNode.input"
                },
                {
                    "source": "FindtheRelation input.output",
                    "target": "new Static Gain 10.input"
                },
                {
                    "source": "new Static Gain 10.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheTargetInput.output",
                    "target": "new Static Gain 19.input"
                },
                {
                    "source": "new Static Gain 19.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheReferenceInput.output",
                    "target": "new Static Gain 20.input"
                },
                {
                    "source": "new Static Gain 20.output",
                    "target": "intention node.input"
                },
                {
                    "source": "TrueFalseInput.output",
                    "target": "new Static Gain 21.input"
                },
                {
                    "source": "new Static Gain 21.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new Static Gain 31.output",
                    "target": "intention node.input"
                },
                {
                    "source": "PreconditionNode FR task.output",
                    "target": "new Static Gain 31.input"
                },
                {
                    "source": "CoS RF_PRODNODES.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "external output.input"
                },
                {
                    "source": "external input 3.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Imagine Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 16.input"
                },
                {
                    "source": "new Static Gain 16.output",
                    "target": "Precondition node True false task.input"
                }
            ],
            "name": "Reference Behavior",
            "connectors": {
                "CoS RF_PRODNODES": "true",
                "FindTheReferenceInput": "true",
                "FindTheTargetInput": "true",
                "FindtheRelation input": "true",
                "Imagine Input": "true",
                "PrecodintionNode": "false",
                "Precondition node True false task": "false",
                "PreconditionNode FR task": "true",
                "RefField & Ref ProdNodes": "false",
                "TrueFalseInput": "true",
                "external input 3": "true",
                "external output": "false",
                "output2": "false"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "510",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "210",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 10",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 16",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "780",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 19",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "210"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 20",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 21",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "390"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 31",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 5",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "780",
                    "positionY": "210"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "360",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "90",
                    "positionY": "150"
                }
            ],
            "ui generic": {
                "group": "Reference Behavior",
                "architecture widgets": "",
                "robots": "",
                "width": "1140",
                "height": "480",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1140",
                "uncollapsed height": "480",
                "positionX": "-8160",
                "positionY": "-960"
            }
        },
        "Reference Field & Reference Production Nodes": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost Reference",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 12",
                    "dimension mapping": {
                        "0": "4294967295",
                        "1": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 14",
                    "dimension mapping": "",
                    "output dimensionality": "2",
                    "output dimension sizes": [
                        "50",
                        "50"
                    ],
                    "compression type": "SUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 22",
                    "gain factor": "2.2999999999999998",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 39",
                    "gain factor": "8",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 46",
                    "gain factor": "4.2000000000000002",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 47",
                    "gain factor": "1.2",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 2",
                    "gain factor": "4.4999999999999982",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Boost Reference.sigmoided activation",
                    "target": "Static Gain 39.input"
                },
                {
                    "source": "Static Gain 39.output",
                    "target": "Projection 14.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Boost Reference.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Projection 14.output",
                    "target": "Ref Field.input"
                },
                {
                    "source": "Main Behavior Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Projection 12.output",
                    "target": "Static Gain 22.input"
                },
                {
                    "source": "Static Gain 22.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 46.input"
                },
                {
                    "source": "Static Gain 46.output",
                    "target": "Prod Ref Nodes.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 47.input"
                },
                {
                    "source": "Static Gain 47.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 2.input"
                },
                {
                    "source": "new Static Gain 2.output",
                    "target": "Main Behavior.input"
                },
                {
                    "source": "CoS Blue.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Red.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Cyan.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Green.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Orange.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Ref Field.output",
                    "target": "Projection 12.input"
                },
                {
                    "source": "CoS MemoryNodes & CF.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoSImagineTask.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS SR Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Find The Target Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS True False Task.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Wipe.output",
                    "target": "CoS node.input"
                }
            ],
            "name": "Reference Field & Reference Production Nodes",
            "connectors": {
                "CoS Blue": "true",
                "CoS Cyan": "true",
                "CoS Find The Target Task": "true",
                "CoS Green": "true",
                "CoS MemoryNodes & CF": "true",
                "CoS Orange": "true",
                "CoS Red": "true",
                "CoS Ref Field": "true",
                "CoS SR Task": "true",
                "CoS True False Task": "true",
                "CoS Wipe": "true",
                "CoSImagineTask": "true",
                "Main Behavior": "false",
                "Main Behavior Input": "true",
                "Prod Ref Nodes": "false",
                "Ref Field": "false"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost Reference",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "900",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Projection 12",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "600",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Projection 14",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 22",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "690",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Static Gain 39",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1110",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "810",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 46",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "Static Gain 47",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "150"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "600",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Reference Field & Reference Production Nodes",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-6750",
                "positionY": "-960"
            }
        },
        "Reference Memory Nodes & Color Field": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost Color Field",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 13",
                    "dimension mapping": "",
                    "output dimensionality": "1",
                    "output dimension sizes": [
                        "50"
                    ],
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 15",
                    "dimension mapping": {
                        "0": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "2",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 58",
                    "gain factor": "2.799999999999998",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 59",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 60",
                    "gain factor": "3.2999999999999998",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "4.4000000000000004",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Main Behavior Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Task Input.output",
                    "target": "intention node.input"
                },
                {
                    "source": "CoS Ref Memory Red.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Ref Memory Cyan.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Ref Memory Green.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Ref Memory Blue.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Reference Memory Nodes.input"
                },
                {
                    "source": "Static Gain 58.output",
                    "target": "Projection 13.input"
                },
                {
                    "source": "Boost Color Field.sigmoided activation",
                    "target": "Static Gain 58.input"
                },
                {
                    "source": "Static Gain 59.output",
                    "target": "Boost Color Field.input"
                },
                {
                    "source": "Projection 13.output",
                    "target": "Color Field.input"
                },
                {
                    "source": "CoS Ref Memory Orange.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Projection 15.output",
                    "target": "Static Gain 60.input"
                },
                {
                    "source": "CoS Color Field.output",
                    "target": "Projection 15.input"
                },
                {
                    "source": "Static Gain 60.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 59.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "RefFieldPrecNodes.input"
                }
            ],
            "name": "Reference Memory Nodes & Color Field",
            "connectors": {
                "CoS Color Field": "true",
                "CoS Ref Memory Blue": "true",
                "CoS Ref Memory Cyan": "true",
                "CoS Ref Memory Green": "true",
                "CoS Ref Memory Orange": "true",
                "CoS Ref Memory Red": "true",
                "Color Field": "false",
                "Main Behavior Input": "true",
                "RefFieldPrecNodes": "false",
                "Reference Memory Nodes": "false",
                "Task Input": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost Color Field",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "990",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Projection 13",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1290",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Projection 15",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "570",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "930",
                    "positionY": "180"
                },
                {
                    "type": "step",
                    "step": "Static Gain 58",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1196.666666666667",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 59",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "900",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 60",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "662.08333333333394",
                    "positionY": "417.91666666666669"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Reference Memory Nodes & Color Field",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-5130",
                "positionY": "-960"
            }
        },
        "Reference Memory Nodes & Color Field 2": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost Color Field",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 13",
                    "dimension mapping": "",
                    "output dimensionality": "1",
                    "output dimension sizes": [
                        "50"
                    ],
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 15",
                    "dimension mapping": {
                        "0": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "2",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 58",
                    "gain factor": "2.799999999999998",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 59",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 60",
                    "gain factor": "3.2999999999999998",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "4.4000000000000004",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Main Behavior Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Task Input.output",
                    "target": "intention node.input"
                },
                {
                    "source": "CoS TargMemory Red.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Targ Memory Cyan.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Targ Memory Green.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Targ Memory Blue.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Reference Memory Nodes.input"
                },
                {
                    "source": "Static Gain 58.output",
                    "target": "Projection 13.input"
                },
                {
                    "source": "Boost Color Field.sigmoided activation",
                    "target": "Static Gain 58.input"
                },
                {
                    "source": "Static Gain 59.output",
                    "target": "Boost Color Field.input"
                },
                {
                    "source": "Projection 13.output",
                    "target": "Color Field.input"
                },
                {
                    "source": "CoS Targ Memory Orange.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Projection 15.output",
                    "target": "Static Gain 60.input"
                },
                {
                    "source": "CoS Color Field.output",
                    "target": "Projection 15.input"
                },
                {
                    "source": "Static Gain 60.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 59.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "RefFieldPrecNodes.input"
                }
            ],
            "name": "Reference Memory Nodes & Color Field 2",
            "connectors": {
                "CoS Color Field": "true",
                "CoS Targ Memory Blue": "true",
                "CoS Targ Memory Cyan": "true",
                "CoS Targ Memory Green": "true",
                "CoS Targ Memory Orange": "true",
                "CoS TargMemory Red": "true",
                "Color Field": "false",
                "Main Behavior Input": "true",
                "RefFieldPrecNodes": "false",
                "Reference Memory Nodes": "false",
                "Task Input": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost Color Field",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "990",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Projection 13",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1290",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Projection 15",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "570",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "930",
                    "positionY": "180"
                },
                {
                    "type": "step",
                    "step": "Static Gain 58",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1196.666666666667",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 59",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "900",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 60",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "662.08333333333394",
                    "positionY": "417.91666666666669"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Reference Memory Nodes & Color Field 2",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-5250",
                "positionY": "2130"
            }
        },
        "Relational Behavior": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 11",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 22",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 23",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 24",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 3",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 37",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 5",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Imagine Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "OCF and rel Prod Nodes.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 5.input"
                },
                {
                    "source": "new Static Gain 5.output",
                    "target": "PrecodintionNode.input"
                },
                {
                    "source": "CoS Subbehavior.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "new Static Gain 3.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Precondition Node Imagine Task.output",
                    "target": "new Static Gain 3.input"
                },
                {
                    "source": "FindtheRelation input.output",
                    "target": "new Static Gain 11.input"
                },
                {
                    "source": "new Static Gain 11.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheTargetInput.output",
                    "target": "new Static Gain 22.input"
                },
                {
                    "source": "new Static Gain 22.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheReference.output",
                    "target": "new Static Gain 23.input"
                },
                {
                    "source": "new Static Gain 23.output",
                    "target": "intention node.input"
                },
                {
                    "source": "TrueFalseInput.output",
                    "target": "new Static Gain 24.input"
                },
                {
                    "source": "new Static Gain 24.output",
                    "target": "intention node.input"
                },
                {
                    "source": "CoDissatisfaction (TrueFalseTask).output",
                    "target": "CoS node.input"
                },
                {
                    "source": "new Static Gain 37.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Precondition Node True False Task1.output",
                    "target": "new Static Gain 37.input"
                }
            ],
            "name": "Relational Behavior",
            "connectors": {
                "CoDissatisfaction (TrueFalseTask)": "true",
                "CoS Subbehavior": "true",
                "FindTheReference": "true",
                "FindTheTargetInput": "true",
                "FindtheRelation input": "true",
                "Imagine Input": "true",
                "OCF and rel Prod Nodes": "false",
                "PrecodintionNode": "false",
                "Precondition Node Imagine Task": "true",
                "Precondition Node True False Task1": "true",
                "TrueFalseInput": "true",
                "output2": "false"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "450",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "120",
                    "positionY": "270"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 11",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "210"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 22",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "331.69491525423729"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 23",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "390"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 24",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "450"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 3",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "120"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 37",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "510"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 5",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "660",
                    "positionY": "120"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "330",
                    "positionY": "60"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "60"
                }
            ],
            "ui generic": {
                "group": "Relational Behavior",
                "architecture widgets": "",
                "robots": "",
                "width": "990",
                "height": "570",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "990",
                "uncollapsed height": "570",
                "positionX": "-7980",
                "positionY": "300"
            }
        },
        "Spatial Memory Nodes": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "2",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 47",
                    "gain factor": "4.2000000000000002",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "4.4000000000000004",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Intention .output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 47.input"
                },
                {
                    "source": "Static Gain 47.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Wipe CoS.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Task Input.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Spatial Memory Nodes.input"
                },
                {
                    "source": "CoS Spatial Memory Above.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory Left.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory Right.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory Below.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory South-East.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory South-West.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory North-East.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Spatial Memory North-West.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "TargetFieldPrecNodes.input"
                }
            ],
            "name": "Spatial Memory Nodes",
            "connectors": {
                "CoS Spatial Memory Above": "true",
                "CoS Spatial Memory Below": "true",
                "CoS Spatial Memory Left": "true",
                "CoS Spatial Memory North-East": "true",
                "CoS Spatial Memory North-West": "true",
                "CoS Spatial Memory Right": "true",
                "CoS Spatial Memory South-East": "true",
                "CoS Spatial Memory South-West": "true",
                "Intention ": "true",
                "Spatial Memory Nodes": "false",
                "TargetFieldPrecNodes": "false",
                "Task Input": "true",
                "Wipe CoS": "true"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "870",
                    "positionY": "60"
                },
                {
                    "type": "step",
                    "step": "Static Gain 47",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Spatial Memory Nodes",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-5130",
                "positionY": "30"
            }
        },
        "Target Behavior": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 12",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 15",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 18",
                    "gain factor": "-1",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 25",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 26",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 27",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 4",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 5",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.1000000000000032",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Imagine Input.output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "TargField and ProdNodes.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 5.input"
                },
                {
                    "source": "new Static Gain 5.output",
                    "target": "PrecodintionNode.input"
                },
                {
                    "source": "CoS TF_PRNODES.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "Wipe CoS.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "FindtheRelation input.output",
                    "target": "new Static Gain 12.input"
                },
                {
                    "source": "new Static Gain 12.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Precondition Node Imagine Task.output",
                    "target": "new Static Gain 15.input"
                },
                {
                    "source": "new Static Gain 15.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheTargetInput.output",
                    "target": "new Static Gain 25.input"
                },
                {
                    "source": "new Static Gain 25.output",
                    "target": "intention node.input"
                },
                {
                    "source": "FindTheReferenceInput.output",
                    "target": "new Static Gain 26.input"
                },
                {
                    "source": "new Static Gain 26.output",
                    "target": "intention node.input"
                },
                {
                    "source": "TrueFalseInput.output",
                    "target": "new Static Gain 27.input"
                },
                {
                    "source": "new Static Gain 27.output",
                    "target": "intention node.input"
                },
                {
                    "source": "external input 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "external output 2.input"
                },
                {
                    "source": "Precondition Node Find the Target.output",
                    "target": "new Static Gain 4.input"
                },
                {
                    "source": "new Static Gain 4.output",
                    "target": "intention node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 18.input"
                },
                {
                    "source": "new Static Gain 18.output",
                    "target": "Precondition node True false task.input"
                }
            ],
            "name": "Target Behavior",
            "connectors": {
                "CoS TF_PRNODES": "true",
                "FindTheReferenceInput": "true",
                "FindTheTargetInput": "true",
                "FindtheRelation input": "true",
                "Imagine Input": "true",
                "PrecodintionNode": "false",
                "Precondition Node Find the Target": "true",
                "Precondition Node Imagine Task": "true",
                "Precondition node True false task": "false",
                "TargField and ProdNodes": "false",
                "TrueFalseInput": "true",
                "Wipe CoS": "true",
                "external input 2": "true",
                "external output 2": "false",
                "output2": "false"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "540",
                    "positionY": "180"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "210",
                    "positionY": "210"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 12",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "180"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 15",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 18",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "810",
                    "positionY": "540"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 25",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 26",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "390"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 27",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "450"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 4",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "120"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 5",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "810",
                    "positionY": "180"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "330",
                    "positionY": "60"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "60",
                    "positionY": "60"
                }
            ],
            "ui generic": {
                "group": "Target Behavior",
                "architecture widgets": "",
                "robots": "",
                "width": "1080",
                "height": "630",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1080",
                "uncollapsed height": "630",
                "positionX": "-8010",
                "positionY": "1590"
            }
        },
        "Target Field & Target Production Nodes": {
            "meta": {
                "format": "1"
            },
            "steps": {
                "cedar.dynamics.NeuralField": {
                    "name": "Boost Target",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "0.99999999999999989",
                            "widths": [
                                "3"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "CoS node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Box": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "5",
                            "widths": [
                                "1"
                            ]
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 12",
                    "dimension mapping": {
                        "0": "4294967295",
                        "1": "4294967295"
                    },
                    "output dimensionality": "0",
                    "output dimension sizes": "",
                    "compression type": "MAXIMUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 14",
                    "dimension mapping": "",
                    "output dimensionality": "2",
                    "output dimension sizes": [
                        "50",
                        "50"
                    ],
                    "compression type": "SUM",
                    "comments": ""
                },
                "cedar.processing.Projection": {
                    "name": "Projection 4",
                    "dimension mapping": "",
                    "output dimensionality": "1",
                    "output dimension sizes": [
                        "50"
                    ],
                    "compression type": "SUM",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 22",
                    "gain factor": "2.2999999999999998",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 39",
                    "gain factor": "8",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 40",
                    "gain factor": "5.5999999999999996",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 46",
                    "gain factor": "4.2000000000000002",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "Static Gain 47",
                    "gain factor": "1.2",
                    "comments": ""
                },
                "cedar.dynamics.NeuralField": {
                    "name": "intention node",
                    "activation as output": "false",
                    "discrete metric (workaround)": "false",
                    "update stepIcon according to output": "true",
                    "threshold for updating the stepIcon": "0.80000000000000004",
                    "dimensionality": "0",
                    "sizes": "",
                    "time scale": "100",
                    "resting level": "-5",
                    "input noise gain": "0.10000000000000001",
                    "sigmoid": {
                        "type": "cedar.aux.math.AbsSigmoid",
                        "threshold": "0",
                        "beta": "100"
                    },
                    "global inhibition": "-0.01",
                    "lateral kernels": {
                        "cedar.aux.kernel.Gauss": {
                            "dimensionality": "1",
                            "anchor": [
                                "0"
                            ],
                            "amplitude": "1",
                            "sigmas": [
                                "3"
                            ],
                            "normalize": "true",
                            "shifts": [
                                "0"
                            ],
                            "limit": "5"
                        }
                    },
                    "lateral kernel convolution": {
                        "borderType": "Zero",
                        "mode": "Same",
                        "engine": {
                            "type": "cedar.aux.conv.OpenCV"
                        },
                        "alternate even kernel center": "false"
                    },
                    "noise correlation kernel": {
                        "dimensionality": "1",
                        "anchor": [
                            "0"
                        ],
                        "amplitude": "0",
                        "sigmas": [
                            "3"
                        ],
                        "normalize": "true",
                        "shifts": [
                            "0"
                        ],
                        "limit": "5"
                    },
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 2",
                    "gain factor": "4.4999999999999982",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new Static Gain 36",
                    "gain factor": "-1",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 2",
                    "gain factor": "-6",
                    "comments": ""
                },
                "cedar.processing.StaticGain": {
                    "name": "new StaticGain 6",
                    "gain factor": "5.3999999999999986",
                    "comments": ""
                }
            },
            "connections": [
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new StaticGain 2.input"
                },
                {
                    "source": "new StaticGain 2.output",
                    "target": "intention node.input"
                },
                {
                    "source": "new StaticGain 6.output",
                    "target": "intention node.input"
                },
                {
                    "source": "Boost Target.sigmoided activation",
                    "target": "Static Gain 39.input"
                },
                {
                    "source": "Static Gain 39.output",
                    "target": "Projection 14.input"
                },
                {
                    "source": "Static Gain 40.output",
                    "target": "Boost Target.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 40.input"
                },
                {
                    "source": "Projection 14.output",
                    "target": "Targ Field.input"
                },
                {
                    "source": "Intention .output",
                    "target": "new StaticGain 6.input"
                },
                {
                    "source": "Projection 12.output",
                    "target": "Static Gain 22.input"
                },
                {
                    "source": "Static Gain 22.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 46.input"
                },
                {
                    "source": "Static Gain 46.output",
                    "target": "Prod Targ Nodes.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Static Gain 47.input"
                },
                {
                    "source": "Static Gain 47.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS node.sigmoided activation",
                    "target": "new Static Gain 2.input"
                },
                {
                    "source": "new Static Gain 2.output",
                    "target": "Main Behavior.input"
                },
                {
                    "source": "CoS Blue.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Red.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Cyan.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Green.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Orange.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Targ Field.output",
                    "target": "Projection 12.input"
                },
                {
                    "source": "CoS MismatchField.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS SR Input.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Wipe.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Find the Reference Input.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS True False Input.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "CoS Memory Target Nodes and CF.output",
                    "target": "CoS node.input"
                },
                {
                    "source": "intention node.sigmoided activation",
                    "target": "Projection 4.input"
                },
                {
                    "source": "Projection 4.output",
                    "target": "new Static Gain 36.input"
                },
                {
                    "source": "new Static Gain 36.output",
                    "target": "Mismatch (Center Position).input"
                }
            ],
            "name": "Target Field & Target Production Nodes",
            "connectors": {
                "CoS Blue": "true",
                "CoS Cyan": "true",
                "CoS Find the Reference Input": "true",
                "CoS Green": "true",
                "CoS Memory Target Nodes and CF": "true",
                "CoS MismatchField": "true",
                "CoS Orange": "true",
                "CoS Red": "true",
                "CoS SR Input": "true",
                "CoS Targ Field": "true",
                "CoS True False Input": "true",
                "CoS Wipe": "true",
                "Intention ": "true",
                "Main Behavior": "false",
                "Mismatch (Center Position)": "false",
                "Prod Targ Nodes": "false",
                "Targ Field": "false"
            },
            "is looped": "true",
            "time factor": "1",
            "ui": [
                {
                    "type": "step",
                    "step": "Boost Target",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "900",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "CoS node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "780",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Projection 12",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "660",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Projection 14",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Projection 4",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1110",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "Static Gain 22",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "750",
                    "positionY": "420"
                },
                {
                    "type": "step",
                    "step": "Static Gain 39",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1110",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 40",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "810",
                    "positionY": "30"
                },
                {
                    "type": "step",
                    "step": "Static Gain 46",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "90"
                },
                {
                    "type": "step",
                    "step": "Static Gain 47",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "intention node",
                    "display style": "ICON_AND_TEXT",
                    "width": "160",
                    "height": "50",
                    "positionX": "330",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1200",
                    "positionY": "150"
                },
                {
                    "type": "step",
                    "step": "new Static Gain 36",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "1230",
                    "positionY": "330"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 2",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "630",
                    "positionY": "240"
                },
                {
                    "type": "step",
                    "step": "new StaticGain 6",
                    "display style": "ICON_ONLY",
                    "width": "40",
                    "height": "40",
                    "positionX": "240",
                    "positionY": "330"
                }
            ],
            "ui generic": {
                "group": "Target Field & Target Production Nodes",
                "architecture widgets": "",
                "robots": "",
                "background color": "255,255,255",
                "width": "1380",
                "height": "510",
                "smart mode": "false",
                "collapsed": "false",
                "lock geometry": "false",
                "uncollapsed width": "1380",
                "uncollapsed height": "510",
                "positionX": "-6750",
                "positionY": "1620"
            }
        }
    },
    "connections": [
        {
            "source": "Target Orange Production.sigmoided activation",
            "target": "Component Multiply 8.operands"
        },
        {
            "source": "Gauss Input 7.Gauss input",
            "target": "Component Multiply 9.operands"
        },
        {
            "source": "Gauss Input 8.Gauss input",
            "target": "Component Multiply 7.operands"
        },
        {
            "source": "Target Cyan Production.sigmoided activation",
            "target": "Component Multiply 7.operands"
        },
        {
            "source": "Component Multiply 7.product",
            "target": "Colour.input"
        },
        {
            "source": "Gauss Input 9.Gauss input",
            "target": "Component Multiply 8.operands"
        },
        {
            "source": "Component Multiply 8.product",
            "target": "Colour.input"
        },
        {
            "source": "Component Multiply 9.product",
            "target": "Colour.input"
        },
        {
            "source": "Target Blue Production.sigmoided activation",
            "target": "Component Multiply 9.operands"
        },
        {
            "source": "Perception.sigmoided activation",
            "target": "Attention.input"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Static Gain 2.input"
        },
        {
            "source": "Static Gain 2.output",
            "target": "Projection 5.input"
        },
        {
            "source": "Projection 5.output",
            "target": "Attention.input"
        },
        {
            "source": "Attention.sigmoided activation",
            "target": "Static Gain 3.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Perception.input"
        },
        {
            "source": "Attention.sigmoided activation",
            "target": "Projection 9.input"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Static Gain 6.input"
        },
        {
            "source": "Static Gain 6.output",
            "target": "Reference.input"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Static Gain 7.input"
        },
        {
            "source": "Static Gain 7.output",
            "target": "Target.input"
        },
        {
            "source": "Gauss Input 4.Gauss input",
            "target": "Component Multiply 4.operands"
        },
        {
            "source": "Node Center .sigmoided activation",
            "target": "Component Multiply 4.operands"
        },
        {
            "source": "Component Multiply 4.product",
            "target": "Projection 2.input"
        },
        {
            "source": "Projection 2.output",
            "target": "Attention.input"
        },
        {
            "source": "Flip.output",
            "target": "Convolution.kernel"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Convolution.matrix"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Flip.input"
        },
        {
            "source": "To the left of Production.sigmoided activation",
            "target": "Component Multiply 3.operands"
        },
        {
            "source": "Component Multiply 3.product",
            "target": "Static Gain.input"
        },
        {
            "source": "Convolution 2.result",
            "target": "Static Gain 10.input"
        },
        {
            "source": "Static Gain 10.output",
            "target": "Target.input"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Flip 2.input"
        },
        {
            "source": "Flip 2.output",
            "target": "Convolution 2.kernel"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Convolution 2.matrix"
        },
        {
            "source": "Below Production.sigmoided activation",
            "target": "Component Multiply 11.operands"
        },
        {
            "source": "Component Multiply 11.product",
            "target": "Static Gain 12.input"
        },
        {
            "source": "Component Multiply 12.product",
            "target": "Static Gain 13.input"
        },
        {
            "source": "To the Right of Production.sigmoided activation",
            "target": "Component Multiply 12.operands"
        },
        {
            "source": "Above Production.sigmoided activation",
            "target": "Component Multiply.operands"
        },
        {
            "source": "Component Multiply.product",
            "target": "Static Gain 11.input"
        },
        {
            "source": "Static Gain 11.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain 13.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain 12.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Flip 3.input"
        },
        {
            "source": "Flip 3.output",
            "target": "Convolution 3.kernel"
        },
        {
            "source": "Indeterminent .sigmoided activation",
            "target": "Convolution 3.matrix"
        },
        {
            "source": "Convolution 3.result",
            "target": "Static Gain 15.input"
        },
        {
            "source": "Static Gain 15.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Spatial Template.spatial pattern",
            "target": "Component Multiply 3.operands"
        },
        {
            "source": "Spatial Template 2.spatial pattern",
            "target": "Component Multiply.operands"
        },
        {
            "source": "Spatial Template 3.spatial pattern",
            "target": "Component Multiply 11.operands"
        },
        {
            "source": "Spatial Template Right.spatial pattern",
            "target": "Component Multiply 12.operands"
        },
        {
            "source": "Perception.sigmoided activation",
            "target": "Projection 7.input"
        },
        {
            "source": "Gauss Input 2.Gauss input",
            "target": "Component Multiply 2.operands"
        },
        {
            "source": "Target Green Production.sigmoided activation",
            "target": "Component Multiply 2.operands"
        },
        {
            "source": "Component Multiply 2.product",
            "target": "Colour.input"
        },
        {
            "source": "Gauss Input 3.Gauss input",
            "target": "Component Multiply 5.operands"
        },
        {
            "source": "Target Red Production.sigmoided activation",
            "target": "Component Multiply 5.operands"
        },
        {
            "source": "Component Multiply 5.product",
            "target": "Colour.input"
        },
        {
            "source": "Projection 9.output",
            "target": "Target.input"
        },
        {
            "source": "Convolution.result",
            "target": "Static Gain 8.input"
        },
        {
            "source": "Static Gain 8.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Target Red Memory.sigmoided activation",
            "target": "Target Red Production.input"
        },
        {
            "source": "Target Blue Memory.sigmoided activation",
            "target": "Target Blue Production.input"
        },
        {
            "source": "Target Cyan Memory.sigmoided activation",
            "target": "Target Cyan Production.input"
        },
        {
            "source": "Target Green Memory.sigmoided activation",
            "target": "Target Green Production.input"
        },
        {
            "source": "Target Orange Memory .sigmoided activation",
            "target": "Target Orange Production.input"
        },
        {
            "source": "Target: Red.boost",
            "target": "Target Red Memory.input"
        },
        {
            "source": "Reference: Red.boost",
            "target": "Reference Red Memory.input"
        },
        {
            "source": "Target: Blue.boost",
            "target": "Target Blue Memory.input"
        },
        {
            "source": "Reference: Blue.boost",
            "target": "Reference Blue Memory.input"
        },
        {
            "source": "Target: Cyan.boost",
            "target": "Target Cyan Memory.input"
        },
        {
            "source": "Reference: Cyan.boost",
            "target": "Reference Cyan Memory.input"
        },
        {
            "source": "Target: Green.boost",
            "target": "Target Green Memory.input"
        },
        {
            "source": "Reference: Green.boost",
            "target": "Reference Green Memory.input"
        },
        {
            "source": "Target: Orange.boost",
            "target": "Target Orange Memory .input"
        },
        {
            "source": "Reference: Orange.boost",
            "target": "Reference Orange Memory.input"
        },
        {
            "source": "To the left of Memory.sigmoided activation",
            "target": "To the left of Production.input"
        },
        {
            "source": "Spatial relation: Above.boost",
            "target": "Above Memory.input"
        },
        {
            "source": "Above Memory.sigmoided activation",
            "target": "Above Production.input"
        },
        {
            "source": "Spatial relation: Below.boost",
            "target": "Below Memory.input"
        },
        {
            "source": "Below Memory.sigmoided activation",
            "target": "Below Production.input"
        },
        {
            "source": "To the Right of Memory.sigmoided activation",
            "target": "To the Right of Production.input"
        },
        {
            "source": "Spatial relation: Right.boost",
            "target": "To the Right of Memory.input"
        },
        {
            "source": "Static Gain 29.output",
            "target": "Node Center .input"
        },
        {
            "source": "Reference Red Production.sigmoided activation",
            "target": "Component Multiply 6.operands"
        },
        {
            "source": "Gauss Input 5.Gauss input",
            "target": "Component Multiply 6.operands"
        },
        {
            "source": "Reference Blue Production.sigmoided activation",
            "target": "Component Multiply 10.operands"
        },
        {
            "source": "Gauss Input 6.Gauss input",
            "target": "Component Multiply 10.operands"
        },
        {
            "source": "Gauss Input 10.Gauss input",
            "target": "Component Multiply 13.operands"
        },
        {
            "source": "Reference Cyan Production.sigmoided activation",
            "target": "Component Multiply 13.operands"
        },
        {
            "source": "Gauss Input 11.Gauss input",
            "target": "Component Multiply 14.operands"
        },
        {
            "source": "Reference Green Production.sigmoided activation",
            "target": "Component Multiply 14.operands"
        },
        {
            "source": "Reference Red Memory.sigmoided activation",
            "target": "Reference Red Production.input"
        },
        {
            "source": "Reference Blue Memory.sigmoided activation",
            "target": "Reference Blue Production.input"
        },
        {
            "source": "Reference Cyan Memory.sigmoided activation",
            "target": "Reference Cyan Production.input"
        },
        {
            "source": "Reference Green Memory.sigmoided activation",
            "target": "Reference Green Production.input"
        },
        {
            "source": "Gauss Input 12.Gauss input",
            "target": "Component Multiply 15.operands"
        },
        {
            "source": "Reference Orange Production.sigmoided activation",
            "target": "Component Multiply 15.operands"
        },
        {
            "source": "Reference Orange Memory.sigmoided activation",
            "target": "Reference Orange Production.input"
        },
        {
            "source": "Component Multiply 6.product",
            "target": "Colour.input"
        },
        {
            "source": "Component Multiply 10.product",
            "target": "Colour.input"
        },
        {
            "source": "Component Multiply 13.product",
            "target": "Colour.input"
        },
        {
            "source": "Component Multiply 14.product",
            "target": "Colour.input"
        },
        {
            "source": "Component Multiply 15.product",
            "target": "Colour.input"
        },
        {
            "source": "Projection 7.output",
            "target": "Indeterminent .input"
        },
        {
            "source": "Mismatch.sigmoided activation",
            "target": "Projection 8.input"
        },
        {
            "source": "Projection 8.output",
            "target": "Static Gain 29.input"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Static Gain 30.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Mismatch.input"
        },
        {
            "source": "Perception.sigmoided activation",
            "target": "Projection 6.input"
        },
        {
            "source": "Projection 6.output",
            "target": "Static Gain 31.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 16.operands"
        },
        {
            "source": "Spatial Template 4.spatial pattern",
            "target": "Component Multiply 16.operands"
        },
        {
            "source": "Component Multiply 16.product",
            "target": "Projection 16.input"
        },
        {
            "source": "Static Gain 71.output",
            "target": "Below Production.input"
        },
        {
            "source": "Below Production.sigmoided activation",
            "target": "Static Gain 76.input"
        },
        {
            "source": "Static Gain 76.output",
            "target": "Below Memory.input"
        },
        {
            "source": "Component Multiply 17.product",
            "target": "Projection 18.input"
        },
        {
            "source": "Component Multiply 18.product",
            "target": "Projection 19.input"
        },
        {
            "source": "Component Multiply 19.product",
            "target": "Projection 20.input"
        },
        {
            "source": "Spatial Template Right 2.spatial pattern",
            "target": "Component Multiply 17.operands"
        },
        {
            "source": "Spatial Template 5.spatial pattern",
            "target": "Component Multiply 18.operands"
        },
        {
            "source": "Spatial Template 6.spatial pattern",
            "target": "Component Multiply 19.operands"
        },
        {
            "source": "Static Gain 77.output",
            "target": "To the Right of Production.input"
        },
        {
            "source": "Static Gain 79.output",
            "target": "To the left of Production.input"
        },
        {
            "source": "Static Gain 81.output",
            "target": "Above Production.input"
        },
        {
            "source": "To the Right of Production.sigmoided activation",
            "target": "Static Gain 83.input"
        },
        {
            "source": "Static Gain 83.output",
            "target": "To the Right of Memory.input"
        },
        {
            "source": "To the left of Production.sigmoided activation",
            "target": "Static Gain 84.input"
        },
        {
            "source": "Static Gain 84.output",
            "target": "To the left of Memory.input"
        },
        {
            "source": "Above Production.sigmoided activation",
            "target": "Static Gain 85.input"
        },
        {
            "source": "Static Gain 85.output",
            "target": "Above Memory.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 17.operands"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 18.operands"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 19.operands"
        },
        {
            "source": "Projection 16.output",
            "target": "Static Gain 71.input"
        },
        {
            "source": "Projection 18.output",
            "target": "Static Gain 77.input"
        },
        {
            "source": "Projection 19.output",
            "target": "Static Gain 79.input"
        },
        {
            "source": "Projection 20.output",
            "target": "Static Gain 81.input"
        },
        {
            "source": "Attention.sigmoided activation",
            "target": "Projection 22.input"
        },
        {
            "source": "Projection 22.output",
            "target": "Static Gain 97.input"
        },
        {
            "source": "Static Gain 97.output",
            "target": "Colour.input"
        },
        {
            "source": "Projection 17.output",
            "target": "Static Gain 104.input"
        },
        {
            "source": "Component Multiply 21.product",
            "target": "Projection 24.input"
        },
        {
            "source": "Projection 23.output",
            "target": "Static Gain 105.input"
        },
        {
            "source": "Projection 24.output",
            "target": "Static Gain 106.input"
        },
        {
            "source": "Projection 25.output",
            "target": "Static Gain 107.input"
        },
        {
            "source": "Component Multiply 22.product",
            "target": "Projection 25.input"
        },
        {
            "source": "Component Multiply 23.product",
            "target": "Projection 17.input"
        },
        {
            "source": "Component Multiply 24.product",
            "target": "Projection 23.input"
        },
        {
            "source": "Projection 26.output",
            "target": "Static Gain 108.input"
        },
        {
            "source": "Component Multiply 25.product",
            "target": "Projection 26.input"
        },
        {
            "source": "Gauss Input 13.Gauss input",
            "target": "Component Multiply 21.operands"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Component Multiply 21.operands"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Component Multiply 23.operands"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Component Multiply 22.operands"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Component Multiply 24.operands"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Component Multiply 25.operands"
        },
        {
            "source": "Static Gain 106.output",
            "target": "Target Red Production.input"
        },
        {
            "source": "Static Gain 104.output",
            "target": "Target Blue Production.input"
        },
        {
            "source": "Static Gain 107.output",
            "target": "Target Cyan Production.input"
        },
        {
            "source": "Static Gain 105.output",
            "target": "Target Green Production.input"
        },
        {
            "source": "Static Gain 108.output",
            "target": "Target Orange Production.input"
        },
        {
            "source": "Target Red Production.sigmoided activation",
            "target": "Static Gain 109.input"
        },
        {
            "source": "Static Gain 109.output",
            "target": "Target Red Memory.input"
        },
        {
            "source": "Target Blue Production.sigmoided activation",
            "target": "Static Gain 110.input"
        },
        {
            "source": "Static Gain 110.output",
            "target": "Target Blue Memory.input"
        },
        {
            "source": "Target Cyan Production.sigmoided activation",
            "target": "Static Gain 111.input"
        },
        {
            "source": "Static Gain 111.output",
            "target": "Target Cyan Memory.input"
        },
        {
            "source": "Target Green Production.sigmoided activation",
            "target": "Static Gain 112.input"
        },
        {
            "source": "Static Gain 112.output",
            "target": "Target Green Memory.input"
        },
        {
            "source": "Target Orange Production.sigmoided activation",
            "target": "Static Gain 113.input"
        },
        {
            "source": "Static Gain 113.output",
            "target": "Target Orange Memory .input"
        },
        {
            "source": "Gauss Input 14.Gauss input",
            "target": "Component Multiply 23.operands"
        },
        {
            "source": "Gauss Input 15.Gauss input",
            "target": "Component Multiply 22.operands"
        },
        {
            "source": "Gauss Input 16.Gauss input",
            "target": "Component Multiply 24.operands"
        },
        {
            "source": "Gauss Input 17.Gauss input",
            "target": "Component Multiply 25.operands"
        },
        {
            "source": "Static Gain 31.output",
            "target": "Mismatch.input"
        },
        {
            "source": "Flip 4.output",
            "target": "Convolution 4.kernel"
        },
        {
            "source": "Convolution 4.result",
            "target": "Static Gain 16.input"
        },
        {
            "source": "Static Gain 16.output",
            "target": "Reference.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Flip 4.input"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Convolution 4.matrix"
        },
        {
            "source": "Attention.sigmoided activation",
            "target": "Projection 10.input"
        },
        {
            "source": "Projection 10.output",
            "target": "Reference.input"
        },
        {
            "source": "Projection 11.output",
            "target": "Static Gain 20.input"
        },
        {
            "source": "Static Gain 20.output",
            "target": "Attention.input"
        },
        {
            "source": "Static Gain 106.output",
            "target": "Reference Red Production.input"
        },
        {
            "source": "Static Gain 104.output",
            "target": "Reference Blue Production.input"
        },
        {
            "source": "Static Gain 107.output",
            "target": "Reference Cyan Production.input"
        },
        {
            "source": "Static Gain 105.output",
            "target": "Reference Green Production.input"
        },
        {
            "source": "Static Gain 108.output",
            "target": "Reference Orange Production.input"
        },
        {
            "source": "Reference Blue Production.sigmoided activation",
            "target": "Static Gain 25.input"
        },
        {
            "source": "Static Gain 25.output",
            "target": "Reference Blue Memory.input"
        },
        {
            "source": "Reference Orange Production.sigmoided activation",
            "target": "Static Gain 32.input"
        },
        {
            "source": "Static Gain 32.output",
            "target": "Reference Orange Memory.input"
        },
        {
            "source": "Reference Green Production.sigmoided activation",
            "target": "Static Gain 28.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Reference Green Memory.input"
        },
        {
            "source": "Reference Cyan Production.sigmoided activation",
            "target": "Static Gain 27.input"
        },
        {
            "source": "Static Gain 27.output",
            "target": "Reference Cyan Memory.input"
        },
        {
            "source": "Reference Red Production.sigmoided activation",
            "target": "Static Gain 26.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Reference Red Memory.input"
        },
        {
            "source": "Convolution.result",
            "target": "Static Gain 33.input"
        },
        {
            "source": "Spatial relation: Left.boost",
            "target": "To the left of Memory.input"
        },
        {
            "source": "Action: Imagine.boost",
            "target": "Imagine (Build mental model).input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Reference Behavior.Imagine Input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Ref Field",
            "target": "Reference.input"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Ref Field"
        },
        {
            "source": "Reference Behavior.RefField & Ref ProdNodes",
            "target": "Reference Field & Reference Production Nodes.Main Behavior Input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Prod Ref Nodes",
            "target": "Reference Red Production.input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Prod Ref Nodes",
            "target": "Reference Blue Production.input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Prod Ref Nodes",
            "target": "Reference Cyan Production.input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Prod Ref Nodes",
            "target": "Reference Green Production.input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Prod Ref Nodes",
            "target": "Reference Orange Production.input"
        },
        {
            "source": "Reference Field & Reference Production Nodes.Main Behavior",
            "target": "Reference Behavior.CoS RF_PRODNODES"
        },
        {
            "source": "Reference Blue Production.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Blue"
        },
        {
            "source": "Reference Red Production.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Red"
        },
        {
            "source": "Reference Cyan Production.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Cyan"
        },
        {
            "source": "Reference Green Production.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Green"
        },
        {
            "source": "Reference Orange Production.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Orange"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .OCF",
            "target": "Object-centered .input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "Below Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "To the Right of Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "To the left of Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "Above Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "South-East of Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "South-West of Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "North-East of Production.input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Spatial Rel Nodes",
            "target": "North-West of Production.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS OCF"
        },
        {
            "source": "To the left of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Left"
        },
        {
            "source": "Below Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Below"
        },
        {
            "source": "To the Right of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Right"
        },
        {
            "source": "Above Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Above"
        },
        {
            "source": "South-East of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS South-East"
        },
        {
            "source": "South-West of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS South-West"
        },
        {
            "source": "North-East of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS North-East"
        },
        {
            "source": "North-West of Production.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS North-West"
        },
        {
            "source": "Relational Behavior.OCF and rel Prod Nodes",
            "target": "OC Field and Spatial Production Nodes  .Main Behavior Input"
        },
        {
            "source": "OC Field and Spatial Production Nodes  .Main Behavior",
            "target": "Relational Behavior.CoS Subbehavior"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Relational Behavior.Imagine Input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Target Behavior.Imagine Input"
        },
        {
            "source": "Target Behavior.TargField and ProdNodes",
            "target": "Target Field & Target Production Nodes.Intention "
        },
        {
            "source": "Target Red Production.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Red"
        },
        {
            "source": "Target Blue Production.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Blue"
        },
        {
            "source": "Target Cyan Production.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Cyan"
        },
        {
            "source": "Target Green Production.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Green"
        },
        {
            "source": "Target Orange Production.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Orange"
        },
        {
            "source": "Target Field & Target Production Nodes.Main Behavior",
            "target": "Target Behavior.CoS TF_PRNODES"
        },
        {
            "source": "Target Field & Target Production Nodes.Prod Targ Nodes",
            "target": "Target Orange Production.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Prod Targ Nodes",
            "target": "Target Green Production.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Prod Targ Nodes",
            "target": "Target Cyan Production.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Prod Targ Nodes",
            "target": "Target Blue Production.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Prod Targ Nodes",
            "target": "Target Red Production.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Targ Field",
            "target": "Target.input"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Targ Field"
        },
        {
            "source": "Target Behavior.TargField and ProdNodes",
            "target": "Match Field.Intention "
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Match FIeld.input"
        },
        {
            "source": "Indeterminent .sigmoided activation",
            "target": "Match FIeld.input"
        },
        {
            "source": "Match FIeld.sigmoided activation",
            "target": "Match Field.CoS Mismatch Field"
        },
        {
            "source": "Match Field.Mismatch field",
            "target": "Match FIeld.input"
        },
        {
            "source": "Match Field.TargetFieldPrecNodes",
            "target": "Target Field & Target Production Nodes.CoS MismatchField"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Match Field.Task Input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Static Gain 4.input"
        },
        {
            "source": "Target Behavior.PrecodintionNode",
            "target": "Precondition Node T-W.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Orange Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Green Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Cyan Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Blue Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Red Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Orange Memory .input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Green Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Cyan Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Blue Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Red Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Match FIeld.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Object-centered .input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Below Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "To the Right of Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "To the left of Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Above Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "South-East of Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "South-West of Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "North-East of Memory.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "North-West of Memory.input"
        },
        {
            "source": "Wipe Node.sigmoided activation",
            "target": "new Static Gain 7.input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "new Static Gain 9.input"
        },
        {
            "source": "new Static Gain 9.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Match Field.Wipe CoS"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Behavior.Wipe CoS"
        },
        {
            "source": "Action: Find the relation .boost",
            "target": "Find the Spatial Relation.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Reference Behavior.FindtheRelation input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Relational Behavior.FindtheRelation input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Target Behavior.FindtheRelation input"
        },
        {
            "source": "Static Gain 21.output",
            "target": "Precondition Node S-W.input"
        },
        {
            "source": "Precondition Node S-W.sigmoided activation",
            "target": "new Static Gain 13.input"
        },
        {
            "source": "new Static Gain 13.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "new Static Gain 14.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "new Static Gain 14.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Static Gain 21.input"
        },
        {
            "source": "Reference Behavior.PrecodintionNode",
            "target": "Precondition Node R-T,S IMAGINE.input"
        },
        {
            "source": "Precondition Node R-T,S IMAGINE.sigmoided activation",
            "target": "Target Behavior.Precondition Node Imagine Task"
        },
        {
            "source": "Relational Behavior.PrecodintionNode",
            "target": "Precondition Node S-W.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "new Static Gain 17.input"
        },
        {
            "source": "new Static Gain 17.output",
            "target": "Indeterminent .input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS SR Input"
        },
        {
            "source": "Relational Behavior.OCF and rel Prod Nodes",
            "target": "Spatial Memory Nodes.Intention "
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Spatial Memory Nodes.Task Input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "Below Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "To the Right of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "To the left of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "Above Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "South-East of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "South-West of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "North-East of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.Spatial Memory Nodes",
            "target": "North-West of Memory.input"
        },
        {
            "source": "Spatial Memory Nodes.TargetFieldPrecNodes",
            "target": "OC Field and Spatial Production Nodes  .CoS Spatial Memory Nodes"
        },
        {
            "source": "Below Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory Below"
        },
        {
            "source": "To the Right of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory Right"
        },
        {
            "source": "To the left of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory Left"
        },
        {
            "source": "Above Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory Above"
        },
        {
            "source": "South-East of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory South-East"
        },
        {
            "source": "South-West of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory South-West"
        },
        {
            "source": "North-East of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory North-East"
        },
        {
            "source": "North-West of Memory.sigmoided activation",
            "target": "Spatial Memory Nodes.CoS Spatial Memory North-West"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Imagine Task"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Spatial Memory Nodes.Wipe CoS"
        },
        {
            "source": "Action: Find the target.boost",
            "target": "Find the Target.input"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Reference Behavior.FindTheTargetInput"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Relational Behavior.FindTheTargetInput"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Target Behavior.FindTheTargetInput"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "new Static Gain 28.input"
        },
        {
            "source": "new Static Gain 28.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "Action: Find the reference.boost",
            "target": "Find the Reference.input"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "new Static Gain 29.input"
        },
        {
            "source": "new Static Gain 29.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Target Behavior.FindTheReferenceInput"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Relational Behavior.FindTheReference"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Reference Behavior.FindTheReferenceInput"
        },
        {
            "source": "Action: True\/False.boost",
            "target": "True \/ False.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "new Static Gain 30.input"
        },
        {
            "source": "new Static Gain 30.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Target Behavior.TrueFalseInput"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Relational Behavior.TrueFalseInput"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Reference Behavior.TrueFalseInput"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Static Gain 44.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Static Gain 45.input"
        },
        {
            "source": "Precondition Node R-W.sigmoided activation",
            "target": "new Static Gain 32.input"
        },
        {
            "source": "new Static Gain 32.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "Static Gain 57.output",
            "target": "Precondition Node R-W.input"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Static Gain 57.input"
        },
        {
            "source": "Reference Behavior.PrecodintionNode",
            "target": "Precondition Node R-W.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "new Static Gain 33.input"
        },
        {
            "source": "new Static Gain 33.output",
            "target": "Indeterminent .input"
        },
        {
            "source": "new Static Gain 34.output",
            "target": "Indeterminent .input"
        },
        {
            "source": "new Static Gain 35.output",
            "target": "Indeterminent .input"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "new Static Gain 35.input"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "new Static Gain 34.input"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.Task Input"
        },
        {
            "source": "Reference Behavior.RefField & Ref ProdNodes",
            "target": "Reference Memory Nodes & Color Field.Main Behavior Input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Color Field",
            "target": "Colour.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Reference Memory Nodes",
            "target": "Reference Red Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Reference Memory Nodes",
            "target": "Reference Blue Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Reference Memory Nodes",
            "target": "Reference Cyan Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Reference Memory Nodes",
            "target": "Reference Green Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field.Reference Memory Nodes",
            "target": "Reference Orange Memory.input"
        },
        {
            "source": "Reference Red Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Ref Memory Red"
        },
        {
            "source": "Reference Blue Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Ref Memory Blue"
        },
        {
            "source": "Reference Cyan Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Ref Memory Cyan"
        },
        {
            "source": "Reference Green Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Ref Memory Green"
        },
        {
            "source": "Reference Orange Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Ref Memory Orange"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field.CoS Color Field"
        },
        {
            "source": "Reference Memory Nodes & Color Field.RefFieldPrecNodes",
            "target": "Reference Field & Reference Production Nodes.CoS MemoryNodes & CF"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoSImagineTask"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS SR Task"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS Find The Target Task"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Reference Field & Reference Production Nodes.CoS True False Task"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Reference Field & Reference Production Nodes.CoS Wipe"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "OC Field and Spatial Production Nodes  .CoS Wipe"
        },
        {
            "source": "new Static Gain 7.output",
            "target": "Target Field & Target Production Nodes.CoS Wipe"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Find the Target Task"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS Find the Reference Task"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "OC Field and Spatial Production Nodes  .CoS True False Task"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS Find the Reference Input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Target Field & Target Production Nodes.CoS True False Input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.RefFieldPrecNodes",
            "target": "Target Field & Target Production Nodes.CoS Memory Target Nodes and CF"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Color Field",
            "target": "Colour.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Reference Memory Nodes",
            "target": "Target Red Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Reference Memory Nodes",
            "target": "Target Blue Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Reference Memory Nodes",
            "target": "Target Cyan Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Reference Memory Nodes",
            "target": "Target Green Memory.input"
        },
        {
            "source": "Reference Memory Nodes & Color Field 2.Reference Memory Nodes",
            "target": "Target Orange Memory .input"
        },
        {
            "source": "Target Red Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS TargMemory Red"
        },
        {
            "source": "Target Blue Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS Targ Memory Blue"
        },
        {
            "source": "Target Cyan Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS Targ Memory Cyan"
        },
        {
            "source": "Target Green Memory.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS Targ Memory Green"
        },
        {
            "source": "Target Orange Memory .sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS Targ Memory Orange"
        },
        {
            "source": "Colour.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.CoS Color Field"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Reference Memory Nodes & Color Field 2.Task Input"
        },
        {
            "source": "Target Behavior.TargField and ProdNodes",
            "target": "Reference Memory Nodes & Color Field 2.Main Behavior Input"
        },
        {
            "source": "Static Gain 45.output",
            "target": "Precondition Node S-W.input"
        },
        {
            "source": "Static Gain 4.output",
            "target": "Precondition Node T-W.input"
        },
        {
            "source": "Static Gain 44.output",
            "target": "Precondition Node T-W.input"
        },
        {
            "source": "Precondition Node T-W.sigmoided activation",
            "target": "new Static Gain 8.input"
        },
        {
            "source": "Target Field & Target Production Nodes.Mismatch (Center Position)",
            "target": "Mismatch.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Static Gain 17.input"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Object-centered .input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Condition of  Dissatisfaction .Task True False"
        },
        {
            "source": "Relational Behavior.OCF and rel Prod Nodes",
            "target": "Condition of  Dissatisfaction .Main Behavior Input"
        },
        {
            "source": "Condition of  Dissatisfaction .Main Behavior",
            "target": "Relational Behavior.CoDissatisfaction (TrueFalseTask)"
        },
        {
            "source": "Reference Behavior.external output",
            "target": "node 2.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Static Gain 18.input"
        },
        {
            "source": "Static Gain 18.output",
            "target": "node 2.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Static Gain 19.input"
        },
        {
            "source": "Static Gain 19.output",
            "target": "node 3.input"
        },
        {
            "source": "Static Gain 35.output",
            "target": "Target Behavior.external input 2"
        },
        {
            "source": "Target Behavior.external output 2",
            "target": "node 3.input"
        },
        {
            "source": "node 3.sigmoided activation",
            "target": "Static Gain 36.input"
        },
        {
            "source": "Static Gain 36.output",
            "target": "Reference Behavior.external input 3"
        },
        {
            "source": "Static Gain 38.output",
            "target": "node 2.input"
        },
        {
            "source": "Static Gain 42.output",
            "target": "node 3.input"
        },
        {
            "source": "Wipe Node.sigmoided activation",
            "target": "node 3.input"
        },
        {
            "source": "Wipe Node.sigmoided activation",
            "target": "node 2.input"
        },
        {
            "source": "new Static Gain 8.output",
            "target": "Wipe Node.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Static Gain 38.input"
        },
        {
            "source": "Find the Spatial Relation.sigmoided activation",
            "target": "Static Gain 42.input"
        },
        {
            "source": "node 2.sigmoided activation",
            "target": "Static Gain 35.input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Static Gain 5.input"
        },
        {
            "source": "Static Gain 5.output",
            "target": "Precondition Node R-T,S IMAGINE.input"
        },
        {
            "source": "Precondition Node R-T,S IMAGINE.sigmoided activation",
            "target": "Relational Behavior.Precondition Node Imagine Task"
        },
        {
            "source": "Static Gain 9.output",
            "target": "Precondition Node R-T Find the Target.input"
        },
        {
            "source": "Precondition Node R-T Find the Target.sigmoided activation",
            "target": "Target Behavior.Precondition Node Find the Target"
        },
        {
            "source": "Reference Behavior.PrecodintionNode",
            "target": "Precondition Node R-T Find the Target.input"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Static Gain 9.input"
        },
        {
            "source": "Static Gain 14.output",
            "target": "Precondition Node T-R Find the Reference.input"
        },
        {
            "source": "Target Behavior.PrecodintionNode",
            "target": "Precondition Node T-R Find the Reference.input"
        },
        {
            "source": "Precondition Node T-R Find the Reference.sigmoided activation",
            "target": "Reference Behavior.PreconditionNode FR task"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Static Gain 14.input"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Component Multiply 26.operands"
        },
        {
            "source": "Component Multiply 26.product",
            "target": "Projection 11.input"
        },
        {
            "source": "Imagine (Build mental model).sigmoided activation",
            "target": "Component Multiply 26.operands"
        },
        {
            "source": "Target.sigmoided activation",
            "target": "Component Multiply 27.operands"
        },
        {
            "source": "Projection 28.output",
            "target": "Static Gain 41.input"
        },
        {
            "source": "Component Multiply 27.product",
            "target": "Projection 28.input"
        },
        {
            "source": "Static Gain 41.output",
            "target": "Attention.input"
        },
        {
            "source": "Find the Target.sigmoided activation",
            "target": "Component Multiply 27.operands"
        },
        {
            "source": "Component Multiply 28.product",
            "target": "Projection 29.input"
        },
        {
            "source": "Projection 29.output",
            "target": "Static Gain 53.input"
        },
        {
            "source": "Static Gain 53.output",
            "target": "Attention.input"
        },
        {
            "source": "Reference.sigmoided activation",
            "target": "Component Multiply 28.operands"
        },
        {
            "source": "Find the Reference.sigmoided activation",
            "target": "Component Multiply 28.operands"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Precondition Node T-R-S or R-T-S True False Task.input"
        },
        {
            "source": "True \/ False.sigmoided activation",
            "target": "Static Gain 24.input"
        },
        {
            "source": "Reference Behavior.Precondition node True false task",
            "target": "Precondition Node T-R-S or R-T-S True False Task.input"
        },
        {
            "source": "Target Behavior.Precondition node True false task",
            "target": "Precondition Node T-R-S or R-T-S True False Task.input"
        },
        {
            "source": "Precondition Node T-R-S or R-T-S True False Task.sigmoided activation",
            "target": "Relational Behavior.Precondition Node True False Task1"
        },
        {
            "source": "Attention.activation",
            "target": "Projection.input"
        },
        {
            "source": "Const Matrix.matrix",
            "target": "Component Multiply 30.operands"
        },
        {
            "source": "Spatial Template 7.spatial pattern",
            "target": "Component Multiply 29.operands"
        },
        {
            "source": "Spatial Template 8.spatial pattern",
            "target": "Component Multiply 29.operands"
        },
        {
            "source": "Component Multiply 29.product",
            "target": "Component Multiply 30.operands"
        },
        {
            "source": "Component Multiply 30.product",
            "target": "Component Multiply 31.operands"
        },
        {
            "source": "Component Multiply 31.product",
            "target": "Projection 3.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 31.operands"
        },
        {
            "source": "Projection 3.output",
            "target": "Static Gain 43.input"
        },
        {
            "source": "Spatial relation: South-East.boost",
            "target": "South-East of Memory.input"
        },
        {
            "source": "South-East of Memory.sigmoided activation",
            "target": "South-East of Production.input"
        },
        {
            "source": "Static Gain 43.output",
            "target": "South-East of Production.input"
        },
        {
            "source": "Spatial Template 10.spatial pattern",
            "target": "Component Multiply 33.operands"
        },
        {
            "source": "Spatial Template 9.spatial pattern",
            "target": "Component Multiply 33.operands"
        },
        {
            "source": "Const Matrix 2.matrix",
            "target": "Component Multiply 34.operands"
        },
        {
            "source": "Component Multiply 33.product",
            "target": "Component Multiply 34.operands"
        },
        {
            "source": "Component Multiply 34.product",
            "target": "Component Multiply 32.operands"
        },
        {
            "source": "South-East of Production.sigmoided activation",
            "target": "Component Multiply 32.operands"
        },
        {
            "source": "South-East of Production.sigmoided activation",
            "target": "Static Gain 55.input"
        },
        {
            "source": "Static Gain 55.output",
            "target": "South-East of Memory.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Static Gain 54.input"
        },
        {
            "source": "Static Gain 54.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Component Multiply 37.product",
            "target": "Projection 30.input"
        },
        {
            "source": "Projection 30.output",
            "target": "Static Gain 56.input"
        },
        {
            "source": "Spatial Template 11.spatial pattern",
            "target": "Component Multiply 35.operands"
        },
        {
            "source": "Spatial Template 12.spatial pattern",
            "target": "Component Multiply 35.operands"
        },
        {
            "source": "Const Matrix 3.matrix",
            "target": "Component Multiply 36.operands"
        },
        {
            "source": "Component Multiply 35.product",
            "target": "Component Multiply 36.operands"
        },
        {
            "source": "Component Multiply 36.product",
            "target": "Component Multiply 37.operands"
        },
        {
            "source": "Spatial Template 13.spatial pattern",
            "target": "Component Multiply 38.operands"
        },
        {
            "source": "Spatial Template 14.spatial pattern",
            "target": "Component Multiply 38.operands"
        },
        {
            "source": "Component Multiply 38.product",
            "target": "Component Multiply 39.operands"
        },
        {
            "source": "Const Matrix 4.matrix",
            "target": "Component Multiply 39.operands"
        },
        {
            "source": "Component Multiply 39.product",
            "target": "Component Multiply 40.operands"
        },
        {
            "source": "Component Multiply 40.product",
            "target": "Projection 31.input"
        },
        {
            "source": "Projection 31.output",
            "target": "Static Gain 61.input"
        },
        {
            "source": "Spatial Template 16.spatial pattern",
            "target": "Component Multiply 41.operands"
        },
        {
            "source": "Spatial Template 15.spatial pattern",
            "target": "Component Multiply 41.operands"
        },
        {
            "source": "Component Multiply 41.product",
            "target": "Component Multiply 42.operands"
        },
        {
            "source": "Const Matrix 5.matrix",
            "target": "Component Multiply 42.operands"
        },
        {
            "source": "Component Multiply 42.product",
            "target": "Component Multiply 43.operands"
        },
        {
            "source": "Component Multiply 43.product",
            "target": "Projection 32.input"
        },
        {
            "source": "Projection 32.output",
            "target": "Static Gain 62.input"
        },
        {
            "source": "Spatial relation: South-West.boost",
            "target": "South-West of Memory.input"
        },
        {
            "source": "South-West of Memory.sigmoided activation",
            "target": "South-West of Production.input"
        },
        {
            "source": "Spatial Template 17.spatial pattern",
            "target": "Component Multiply 45.operands"
        },
        {
            "source": "Spatial Template 18.spatial pattern",
            "target": "Component Multiply 45.operands"
        },
        {
            "source": "Const Matrix 6.matrix",
            "target": "Component Multiply 46.operands"
        },
        {
            "source": "Component Multiply 45.product",
            "target": "Component Multiply 46.operands"
        },
        {
            "source": "South-West of Production.sigmoided activation",
            "target": "Component Multiply 44.operands"
        },
        {
            "source": "Component Multiply 46.product",
            "target": "Component Multiply 44.operands"
        },
        {
            "source": "South-West of Production.sigmoided activation",
            "target": "Static Gain 64.input"
        },
        {
            "source": "Static Gain 64.output",
            "target": "South-West of Memory.input"
        },
        {
            "source": "Component Multiply 44.product",
            "target": "Static Gain 63.input"
        },
        {
            "source": "Static Gain 63.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain 56.output",
            "target": "South-West of Production.input"
        },
        {
            "source": "Spatial Template 19.spatial pattern",
            "target": "Component Multiply 47.operands"
        },
        {
            "source": "Spatial Template 20.spatial pattern",
            "target": "Component Multiply 47.operands"
        },
        {
            "source": "Component Multiply 47.product",
            "target": "Component Multiply 48.operands"
        },
        {
            "source": "Const Matrix 7.matrix",
            "target": "Component Multiply 48.operands"
        },
        {
            "source": "Component Multiply 48.product",
            "target": "Component Multiply 49.operands"
        },
        {
            "source": "North-East of Production.sigmoided activation",
            "target": "Component Multiply 49.operands"
        },
        {
            "source": "Spatial relation: North-East.boost",
            "target": "North-East of Memory.input"
        },
        {
            "source": "North-East of Memory.sigmoided activation",
            "target": "North-East of Production.input"
        },
        {
            "source": "Component Multiply 49.product",
            "target": "Static Gain 65.input"
        },
        {
            "source": "North-East of Production.sigmoided activation",
            "target": "Static Gain 66.input"
        },
        {
            "source": "Static Gain 65.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain 66.output",
            "target": "North-East of Memory.input"
        },
        {
            "source": "Spatial relation: North-West.boost",
            "target": "North-West of Memory.input"
        },
        {
            "source": "North-West of Memory.sigmoided activation",
            "target": "North-West of Production.input"
        },
        {
            "source": "Spatial Template 21.spatial pattern",
            "target": "Component Multiply 50.operands"
        },
        {
            "source": "Spatial Template 22.spatial pattern",
            "target": "Component Multiply 50.operands"
        },
        {
            "source": "Component Multiply 50.product",
            "target": "Component Multiply 51.operands"
        },
        {
            "source": "Const Matrix 8.matrix",
            "target": "Component Multiply 51.operands"
        },
        {
            "source": "Component Multiply 51.product",
            "target": "Component Multiply 52.operands"
        },
        {
            "source": "North-West of Production.sigmoided activation",
            "target": "Static Gain 68.input"
        },
        {
            "source": "Component Multiply 52.product",
            "target": "Static Gain 67.input"
        },
        {
            "source": "Static Gain 68.output",
            "target": "North-West of Memory.input"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 37.operands"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 40.operands"
        },
        {
            "source": "Object-centered .sigmoided activation",
            "target": "Component Multiply 43.operands"
        },
        {
            "source": "North-West of Production.sigmoided activation",
            "target": "Component Multiply 52.operands"
        },
        {
            "source": "Static Gain 67.output",
            "target": "Object-centered .input"
        },
        {
            "source": "Static Gain 61.output",
            "target": "North-East of Production.input"
        },
        {
            "source": "Static Gain 62.output",
            "target": "North-West of Production.input"
        }
    ],
    "name": "",
    "connectors": "",
    "is looped": "true",
    "time factor": "0.26000000000000001",
    "ui": [
        {
            "type": "step",
            "step": "Above Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "757.96182585411646",
            "positionY": "1293.2588916459879"
        },
        {
            "type": "step",
            "step": "Above Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "959.73236355862093",
            "positionY": "1293.7999565406351"
        },
        {
            "type": "step",
            "step": "Action: Find the reference",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9450",
            "positionY": "1860"
        },
        {
            "type": "step",
            "step": "Action: Find the relation ",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9450",
            "positionY": "1110"
        },
        {
            "type": "step",
            "step": "Action: Find the target",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9450",
            "positionY": "1590"
        },
        {
            "type": "step",
            "step": "Action: Imagine",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9450",
            "positionY": "660"
        },
        {
            "type": "step",
            "step": "Action: True\/False",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9450",
            "positionY": "2100"
        },
        {
            "type": "step",
            "step": "Attention",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-600",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Below Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "750",
            "positionY": "870"
        },
        {
            "type": "step",
            "step": "Below Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "960",
            "positionY": "870"
        },
        {
            "type": "step",
            "step": "Colour",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1050",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Component Multiply",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1183.6923076923081",
            "positionY": "1306.23076923077"
        },
        {
            "type": "step",
            "step": "Component Multiply 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1335.454545454545",
            "positionY": "195.11111111111109"
        },
        {
            "type": "step",
            "step": "Component Multiply 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1170",
            "positionY": "900"
        },
        {
            "type": "step",
            "step": "Component Multiply 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1185.092038875104",
            "positionY": "1047.7537634408609"
        },
        {
            "type": "step",
            "step": "Component Multiply 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1337.6363636363631",
            "positionY": "310.42424242424249"
        },
        {
            "type": "step",
            "step": "Component Multiply 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Component Multiply 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1341.1919191919189",
            "positionY": "501.84848484848482"
        },
        {
            "type": "step",
            "step": "Component Multiply 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1020",
            "positionY": "1650"
        },
        {
            "type": "step",
            "step": "Component Multiply 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1020",
            "positionY": "1770"
        },
        {
            "type": "step",
            "step": "Component Multiply 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1020",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Component Multiply 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1020",
            "positionY": "2010"
        },
        {
            "type": "step",
            "step": "Component Multiply 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1238.152492668622",
            "positionY": "-182.2754154447702"
        },
        {
            "type": "step",
            "step": "Component Multiply 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-210",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Component Multiply 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1020",
            "positionY": "-870"
        },
        {
            "type": "step",
            "step": "Component Multiply 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1020",
            "positionY": "-630"
        },
        {
            "type": "step",
            "step": "Component Multiply 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1020",
            "positionY": "-750"
        },
        {
            "type": "step",
            "step": "Component Multiply 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1020",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Component Multiply 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1020",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Component Multiply 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-660",
            "positionY": "420"
        },
        {
            "type": "step",
            "step": "Component Multiply 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-570",
            "positionY": "420"
        },
        {
            "type": "step",
            "step": "Component Multiply 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-120",
            "positionY": "360"
        },
        {
            "type": "step",
            "step": "Component Multiply 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "423.44787229960514",
            "positionY": "2025.5928398756737"
        },
        {
            "type": "step",
            "step": "Component Multiply 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1180.0884615384609",
            "positionY": "1186.676923076923"
        },
        {
            "type": "step",
            "step": "Component Multiply 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "516.22891165598696",
            "positionY": "2059.6219766445361"
        },
        {
            "type": "step",
            "step": "Component Multiply 31",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "602.8999270941257",
            "positionY": "2058.4695522044408"
        },
        {
            "type": "step",
            "step": "Component Multiply 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2.9482953960241503",
            "positionY": "1698.9005046863717"
        },
        {
            "type": "step",
            "step": "Component Multiply 33",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-260.06540323411264",
            "positionY": "1750.9552992069198"
        },
        {
            "type": "step",
            "step": "Component Multiply 34",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-161.43526624781134",
            "positionY": "1774.2429704397969"
        },
        {
            "type": "step",
            "step": "Component Multiply 35",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "416.59855723111161",
            "positionY": "2169.4284563140322"
        },
        {
            "type": "step",
            "step": "Component Multiply 36",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "509.74924216261832",
            "positionY": "2192.7161275469102"
        },
        {
            "type": "step",
            "step": "Component Multiply 37",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "596.05061202563195",
            "positionY": "2194.0859905606071"
        },
        {
            "type": "step",
            "step": "Component Multiply 38",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "411.11910517631702",
            "positionY": "2309.1544837112929"
        },
        {
            "type": "step",
            "step": "Component Multiply 39",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "508.37937914891984",
            "positionY": "2328.3325659030747"
        },
        {
            "type": "step",
            "step": "Component Multiply 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "720",
            "positionY": "-150"
        },
        {
            "type": "step",
            "step": "Component Multiply 40",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "596.05061202563195",
            "positionY": "2326.9627028893742"
        },
        {
            "type": "step",
            "step": "Component Multiply 41",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "411.11910517631702",
            "positionY": "2455.729826177047"
        },
        {
            "type": "step",
            "step": "Component Multiply 42",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "508.37937914891984",
            "positionY": "2481.7572234373206"
        },
        {
            "type": "step",
            "step": "Component Multiply 43",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "596.05061202563218",
            "positionY": "2481.7572234373206"
        },
        {
            "type": "step",
            "step": "Component Multiply 44",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-16.229786795755899",
            "positionY": "1915.3388608507571"
        },
        {
            "type": "step",
            "step": "Component Multiply 45",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-272.39417035740098",
            "positionY": "1959.1744772891129"
        },
        {
            "type": "step",
            "step": "Component Multiply 46",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-179.24348542589451",
            "positionY": "1982.4621485219895"
        },
        {
            "type": "step",
            "step": "Component Multiply 47",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-275.13389638479839",
            "positionY": "2170.1333813987012"
        },
        {
            "type": "step",
            "step": "Component Multiply 48",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-174.22736939043807",
            "positionY": "2183.1269349845197"
        },
        {
            "type": "step",
            "step": "Component Multiply 49",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-10.750334740962899",
            "positionY": "2115.3388608507566"
        },
        {
            "type": "step",
            "step": "Component Multiply 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1255.792033235582",
            "positionY": "-492.92693059628539"
        },
        {
            "type": "step",
            "step": "Component Multiply 50",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-273.07910186424942",
            "positionY": "2362.5386996904026"
        },
        {
            "type": "step",
            "step": "Component Multiply 51",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-170.13792539366204",
            "positionY": "2383.1269349845197"
        },
        {
            "type": "step",
            "step": "Component Multiply 52",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "15.156192253397421",
            "positionY": "2312.5386996904008"
        },
        {
            "type": "step",
            "step": "Component Multiply 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1357.655588139459",
            "positionY": "44.921798631476122"
        },
        {
            "type": "step",
            "step": "Component Multiply 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1242.3487179487181",
            "positionY": "-288.71841491841491"
        },
        {
            "type": "step",
            "step": "Component Multiply 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1238.522324986842",
            "positionY": "-95.919978945785431"
        },
        {
            "type": "step",
            "step": "Component Multiply 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1247.048620197007",
            "positionY": "-385.90414316865917"
        },
        {
            "type": "step",
            "step": "Const Matrix",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "420.99081641789178",
            "positionY": "2097.7172147397746"
        },
        {
            "type": "step",
            "step": "Const Matrix 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-261.43526624781134",
            "positionY": "1812.5991348233579"
        },
        {
            "type": "step",
            "step": "Const Matrix 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "416.59855723111161",
            "positionY": "2233.8120179578677"
        },
        {
            "type": "step",
            "step": "Const Matrix 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "412.48896819001573",
            "positionY": "2362.5791412455387"
        },
        {
            "type": "step",
            "step": "Const Matrix 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "409.74924216261832",
            "positionY": "2517.3736617934851"
        },
        {
            "type": "step",
            "step": "Const Matrix 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-273.76403337109969",
            "positionY": "2013.9689978370579"
        },
        {
            "type": "step",
            "step": "Const Matrix 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-275.13389638479839",
            "positionY": "2231.7772170151411"
        },
        {
            "type": "step",
            "step": "Const Matrix 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-276.02027833483862",
            "positionY": "2424.3034055727539"
        },
        {
            "type": "step",
            "step": "Convolution",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-810",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Convolution 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-480",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Convolution 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "210",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Convolution 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-150",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Find the Reference",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9360",
            "positionY": "1860"
        },
        {
            "type": "step",
            "step": "Find the Spatial Relation",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9360",
            "positionY": "1110"
        },
        {
            "type": "step",
            "step": "Find the Target",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9360",
            "positionY": "1620"
        },
        {
            "type": "step",
            "step": "Flip",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-900",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Flip 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-570",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Flip 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "120",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Flip 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-240",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Gauss Input 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1440",
            "positionY": "330"
        },
        {
            "type": "step",
            "step": "Gauss Input 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1440",
            "positionY": "420"
        },
        {
            "type": "step",
            "step": "Gauss Input 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1440",
            "positionY": "570"
        },
        {
            "type": "step",
            "step": "Gauss Input 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1110",
            "positionY": "-870"
        },
        {
            "type": "step",
            "step": "Gauss Input 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1110",
            "positionY": "-750"
        },
        {
            "type": "step",
            "step": "Gauss Input 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1110",
            "positionY": "-630"
        },
        {
            "type": "step",
            "step": "Gauss Input 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1110",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Gauss Input 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1110",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Gauss Input 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "Gauss Input 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-450"
        },
        {
            "type": "step",
            "step": "Gauss Input 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "630",
            "positionY": "-90"
        },
        {
            "type": "step",
            "step": "Gauss Input 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1470",
            "positionY": "90"
        },
        {
            "type": "step",
            "step": "Gauss Input 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1443.454545454545",
            "positionY": "214.35353535353559"
        },
        {
            "type": "step",
            "step": "Gauss Input 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-330"
        },
        {
            "type": "step",
            "step": "Gauss Input 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-240"
        },
        {
            "type": "step",
            "step": "Gauss Input 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-60"
        },
        {
            "type": "step",
            "step": "Imagine (Build mental model)",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9360",
            "positionY": "660"
        },
        {
            "type": "step",
            "step": "Indeterminent ",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "420",
            "positionY": "420"
        },
        {
            "type": "step",
            "step": "Match FIeld",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "180",
            "positionY": "570"
        },
        {
            "type": "step",
            "step": "Mismatch",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "120",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "Node Center ",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "510",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "North-East of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-457.32567720671523",
            "positionY": "2092.0511896178805"
        },
        {
            "type": "step",
            "step": "North-East of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-232.66814296014036",
            "positionY": "2090.6813266041818"
        },
        {
            "type": "step",
            "step": "North-West of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-451.02027833483862",
            "positionY": "2287.5386996904026"
        },
        {
            "type": "step",
            "step": "North-West of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-215.72616068777916",
            "positionY": "2286.0681114551089"
        },
        {
            "type": "step",
            "step": "Object-centered ",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-360",
            "positionY": "1290"
        },
        {
            "type": "step",
            "step": "Perception",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-480",
            "positionY": "-270"
        },
        {
            "type": "step",
            "step": "Precondition Node R-T Find the Target",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8400",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Precondition Node R-T,S IMAGINE",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8400",
            "positionY": "570"
        },
        {
            "type": "step",
            "step": "Precondition Node R-W",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8580",
            "positionY": "3180"
        },
        {
            "type": "step",
            "step": "Precondition Node S-W",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8580",
            "positionY": "3060"
        },
        {
            "type": "step",
            "step": "Precondition Node T-R Find the Reference",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8460",
            "positionY": "1530"
        },
        {
            "type": "step",
            "step": "Precondition Node T-R-S or R-T-S True False Task",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8520",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Precondition Node T-W",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8610",
            "positionY": "2970"
        },
        {
            "type": "step",
            "step": "Projection",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-270",
            "positionY": "150"
        },
        {
            "type": "step",
            "step": "Projection 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-270",
            "positionY": "360"
        },
        {
            "type": "step",
            "step": "Projection 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-600",
            "positionY": "330"
        },
        {
            "type": "step",
            "step": "Projection 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1110",
            "positionY": "1650"
        },
        {
            "type": "step",
            "step": "Projection 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-930",
            "positionY": "-750"
        },
        {
            "type": "step",
            "step": "Projection 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1110",
            "positionY": "1770"
        },
        {
            "type": "step",
            "step": "Projection 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1110",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Projection 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "810",
            "positionY": "-150"
        },
        {
            "type": "step",
            "step": "Projection 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1110",
            "positionY": "2010"
        },
        {
            "type": "step",
            "step": "Projection 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-750",
            "positionY": "-30"
        },
        {
            "type": "step",
            "step": "Projection 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-930",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Projection 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-930",
            "positionY": "-870"
        },
        {
            "type": "step",
            "step": "Projection 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-930",
            "positionY": "-630"
        },
        {
            "type": "step",
            "step": "Projection 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-930",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Projection 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-510",
            "positionY": "330"
        },
        {
            "type": "step",
            "step": "Projection 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-60",
            "positionY": "270"
        },
        {
            "type": "step",
            "step": "Projection 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "693.31088599823499",
            "positionY": "2059.8394152181395"
        },
        {
            "type": "step",
            "step": "Projection 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "685.09170791604322",
            "positionY": "2191.3462645332097"
        },
        {
            "type": "step",
            "step": "Projection 31",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "683.72184490234451",
            "positionY": "2329.7024289167716"
        },
        {
            "type": "step",
            "step": "Projection 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "690.57115997083758",
            "positionY": "2480.3873604236201"
        },
        {
            "type": "step",
            "step": "Projection 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-690",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Projection 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-180",
            "positionY": "-240"
        },
        {
            "type": "step",
            "step": "Projection 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "360",
            "positionY": "420"
        },
        {
            "type": "step",
            "step": "Projection 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "330",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "Projection 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Reference",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-150",
            "positionY": "630"
        },
        {
            "type": "step",
            "step": "Reference Blue Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1770",
            "positionY": "150"
        },
        {
            "type": "step",
            "step": "Reference Blue Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1555.5314685314679",
            "positionY": "145.08080808080811"
        },
        {
            "type": "step",
            "step": "Reference Cyan Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1770",
            "positionY": "270"
        },
        {
            "type": "step",
            "step": "Reference Cyan Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1560",
            "positionY": "270"
        },
        {
            "type": "step",
            "step": "Reference Green Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1770",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Reference Green Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1530",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Reference Orange Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1781.4255438729299",
            "positionY": "493.03550514002131"
        },
        {
            "type": "step",
            "step": "Reference Orange Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1561.1616161616159",
            "positionY": "495.75757575757552"
        },
        {
            "type": "step",
            "step": "Reference Red Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1770",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Reference Red Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1560",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Reference: Blue",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1890",
            "positionY": "150"
        },
        {
            "type": "step",
            "step": "Reference: Cyan",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1860",
            "positionY": "270"
        },
        {
            "type": "step",
            "step": "Reference: Green",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1860",
            "positionY": "360"
        },
        {
            "type": "step",
            "step": "Reference: Orange",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1866.6666666666649",
            "positionY": "494.08602150537598"
        },
        {
            "type": "step",
            "step": "Reference: Red",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1890",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "South-East of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-440.88732104233259",
            "positionY": "1670.1333813987007"
        },
        {
            "type": "step",
            "step": "South-East of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-224.44896487794813",
            "positionY": "1671.5032444123985"
        },
        {
            "type": "step",
            "step": "South-West of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-449.10649912452482",
            "positionY": "1890.6813266041813"
        },
        {
            "type": "step",
            "step": "South-West of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-235.40786898753777",
            "positionY": "1890.6813266041813"
        },
        {
            "type": "step",
            "step": "Spatial Template",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1077.228110599078",
            "positionY": "1225.637067233841"
        },
        {
            "type": "step",
            "step": "Spatial Template 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-368.28458131630487",
            "positionY": "1808.4895457822627"
        },
        {
            "type": "step",
            "step": "Spatial Template 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "323.44787229960468",
            "positionY": "2170.798319327731"
        },
        {
            "type": "step",
            "step": "Spatial Template 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "324.81773531330316",
            "positionY": "2229.7024289167716"
        },
        {
            "type": "step",
            "step": "Spatial Template 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "322.07800928590598",
            "positionY": "2313.264072752389"
        },
        {
            "type": "step",
            "step": "Spatial Template 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "322.07800928590598",
            "positionY": "2369.4284563140322"
        },
        {
            "type": "step",
            "step": "Spatial Template 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "317.96842024481032",
            "positionY": "2454.3599631633483"
        },
        {
            "type": "step",
            "step": "Spatial Template 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "316.59855723111139",
            "positionY": "2507.7846206975942"
        },
        {
            "type": "step",
            "step": "Spatial Template 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-364.17499227520875",
            "positionY": "1964.6539293439082"
        },
        {
            "type": "step",
            "step": "Spatial Template 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-362.80512926151005",
            "positionY": "2018.0785868781541"
        },
        {
            "type": "step",
            "step": "Spatial Template 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-371.02430734370228",
            "positionY": "2170.1333813987012"
        },
        {
            "type": "step",
            "step": "Spatial Template 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1050",
            "positionY": "1380"
        },
        {
            "type": "step",
            "step": "Spatial Template 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-372.39417035740098",
            "positionY": "2223.5580389329489"
        },
        {
            "type": "step",
            "step": "Spatial Template 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-370.13792539366204",
            "positionY": "2359.5975232198134"
        },
        {
            "type": "step",
            "step": "Spatial Template 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-371.60851362895573",
            "positionY": "2418.4210526315774"
        },
        {
            "type": "step",
            "step": "Spatial Template 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1088.522746071133",
            "positionY": "929.26550868486333"
        },
        {
            "type": "step",
            "step": "Spatial Template 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "930",
            "positionY": "1650"
        },
        {
            "type": "step",
            "step": "Spatial Template 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "930",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Spatial Template 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "930",
            "positionY": "2010"
        },
        {
            "type": "step",
            "step": "Spatial Template 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "333.25435196909882",
            "positionY": "2029.4632464858064"
        },
        {
            "type": "step",
            "step": "Spatial Template 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "332.10192752900309",
            "positionY": "2085.018802041363"
        },
        {
            "type": "step",
            "step": "Spatial Template 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-366.91471830260616",
            "positionY": "1755.0648882480159"
        },
        {
            "type": "step",
            "step": "Spatial Template Right",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1080",
            "positionY": "1080"
        },
        {
            "type": "step",
            "step": "Spatial Template Right 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "930",
            "positionY": "1770"
        },
        {
            "type": "step",
            "step": "Spatial relation: Above",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "677.67123287671234",
            "positionY": "1294.1095890410961"
        },
        {
            "type": "step",
            "step": "Spatial relation: Below",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "665.12252451849236",
            "positionY": "866.85874985229736"
        },
        {
            "type": "step",
            "step": "Spatial relation: Left",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "630",
            "positionY": "1140"
        },
        {
            "type": "step",
            "step": "Spatial relation: North-East",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-545.15807043798031",
            "positionY": "2091.8497391746887"
        },
        {
            "type": "step",
            "step": "Spatial relation: North-West",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-540.72616068777916",
            "positionY": "2288.5930837081596"
        },
        {
            "type": "step",
            "step": "Spatial relation: Right",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "667.38484284532672",
            "positionY": "1001.603225806452"
        },
        {
            "type": "step",
            "step": "Spatial relation: South-East",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-539.51745802863206",
            "positionY": "1672.8731074260982"
        },
        {
            "type": "step",
            "step": "Spatial relation: South-West",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-543.62704706973",
            "positionY": "1892.05118961788"
        },
        {
            "type": "step",
            "step": "Static Gain",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1260",
            "positionY": "1200"
        },
        {
            "type": "step",
            "step": "Static Gain 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-390",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Static Gain 104",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840.00000000000011",
            "positionY": "-752.08333333333348"
        },
        {
            "type": "step",
            "step": "Static Gain 105",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Static Gain 106",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840",
            "positionY": "-870"
        },
        {
            "type": "step",
            "step": "Static Gain 107",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840",
            "positionY": "-630"
        },
        {
            "type": "step",
            "step": "Static Gain 108",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-840",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Static Gain 109",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-570"
        },
        {
            "type": "step",
            "step": "Static Gain 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1260",
            "positionY": "1320"
        },
        {
            "type": "step",
            "step": "Static Gain 110",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-450"
        },
        {
            "type": "step",
            "step": "Static Gain 111",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-360"
        },
        {
            "type": "step",
            "step": "Static Gain 112",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-270"
        },
        {
            "type": "step",
            "step": "Static Gain 113",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "Static Gain 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1260",
            "positionY": "930"
        },
        {
            "type": "step",
            "step": "Static Gain 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1260",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Static Gain 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8580",
            "positionY": "1530"
        },
        {
            "type": "step",
            "step": "Static Gain 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "300",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Static Gain 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-60",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Static Gain 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-7620",
            "positionY": "3000"
        },
        {
            "type": "step",
            "step": "Static Gain 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9480",
            "positionY": "2490"
        },
        {
            "type": "step",
            "step": "Static Gain 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9150",
            "positionY": "2430"
        },
        {
            "type": "step",
            "step": "Static Gain 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-780",
            "positionY": "30"
        },
        {
            "type": "step",
            "step": "Static Gain 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-570",
            "positionY": "240"
        },
        {
            "type": "step",
            "step": "Static Gain 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8670",
            "positionY": "3060"
        },
        {
            "type": "step",
            "step": "Static Gain 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1350",
            "positionY": "-60"
        },
        {
            "type": "step",
            "step": "Static Gain 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8640",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Static Gain 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "90"
        },
        {
            "type": "step",
            "step": "Static Gain 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "-30"
        },
        {
            "type": "step",
            "step": "Static Gain 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1590",
            "positionY": "210"
        },
        {
            "type": "step",
            "step": "Static Gain 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1620",
            "positionY": "330"
        },
        {
            "type": "step",
            "step": "Static Gain 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "420",
            "positionY": "-180"
        },
        {
            "type": "step",
            "step": "Static Gain 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-570",
            "positionY": "-150"
        },
        {
            "type": "step",
            "step": "Static Gain 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-240",
            "positionY": "-60"
        },
        {
            "type": "step",
            "step": "Static Gain 31",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-60",
            "positionY": "-210"
        },
        {
            "type": "step",
            "step": "Static Gain 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1620",
            "positionY": "450"
        },
        {
            "type": "step",
            "step": "Static Gain 33",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-720",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Static Gain 35",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9210",
            "positionY": "2640"
        },
        {
            "type": "step",
            "step": "Static Gain 36",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9210",
            "positionY": "2820"
        },
        {
            "type": "step",
            "step": "Static Gain 38",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9390",
            "positionY": "2460"
        },
        {
            "type": "step",
            "step": "Static Gain 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8700",
            "positionY": "2910"
        },
        {
            "type": "step",
            "step": "Static Gain 41",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-480",
            "positionY": "240"
        },
        {
            "type": "step",
            "step": "Static Gain 42",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-9210",
            "positionY": "2490"
        },
        {
            "type": "step",
            "step": "Static Gain 43",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "783.72184490234451",
            "positionY": "2059.8394152181395"
        },
        {
            "type": "step",
            "step": "Static Gain 44",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8700",
            "positionY": "3000"
        },
        {
            "type": "step",
            "step": "Static Gain 45",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8670",
            "positionY": "3120"
        },
        {
            "type": "step",
            "step": "Static Gain 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8520",
            "positionY": "570"
        },
        {
            "type": "step",
            "step": "Static Gain 53",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-30",
            "positionY": "180"
        },
        {
            "type": "step",
            "step": "Static Gain 54",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "87.879802245340215",
            "positionY": "1723.5580389329466"
        },
        {
            "type": "step",
            "step": "Static Gain 55",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-35.407868987537768",
            "positionY": "1766.0237923576046"
        },
        {
            "type": "step",
            "step": "Static Gain 56",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "774.13280380645404",
            "positionY": "2189.976401519511"
        },
        {
            "type": "step",
            "step": "Static Gain 57",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8670",
            "positionY": "3180"
        },
        {
            "type": "step",
            "step": "Static Gain 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-420",
            "positionY": "540"
        },
        {
            "type": "step",
            "step": "Static Gain 61",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "775.50266682015274",
            "positionY": "2326.962702889376"
        },
        {
            "type": "step",
            "step": "Static Gain 62",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "782.35198188864581",
            "positionY": "2480.3873604236219"
        },
        {
            "type": "step",
            "step": "Static Gain 63",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "75.551035122051871",
            "positionY": "1957.8046142754151"
        },
        {
            "type": "step",
            "step": "Static Gain 64",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-44.996910083426883",
            "positionY": "1981.0922855082908"
        },
        {
            "type": "step",
            "step": "Static Gain 65",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "77.827425130109077",
            "positionY": "2152.1841469103865"
        },
        {
            "type": "step",
            "step": "Static Gain 66",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-54.585951179317817",
            "positionY": "2185.201874549387"
        },
        {
            "type": "step",
            "step": "Static Gain 67",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "87.215015782808223",
            "positionY": "2349.3034055727558"
        },
        {
            "type": "step",
            "step": "Static Gain 68",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-31.9026312760152",
            "positionY": "2372.8328173374621"
        },
        {
            "type": "step",
            "step": "Static Gain 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-420",
            "positionY": "630"
        },
        {
            "type": "step",
            "step": "Static Gain 71",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1200",
            "positionY": "1650"
        },
        {
            "type": "step",
            "step": "Static Gain 76",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1170",
            "positionY": "960"
        },
        {
            "type": "step",
            "step": "Static Gain 77",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1200",
            "positionY": "1770"
        },
        {
            "type": "step",
            "step": "Static Gain 79",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1200",
            "positionY": "1890"
        },
        {
            "type": "step",
            "step": "Static Gain 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-720",
            "positionY": "990"
        },
        {
            "type": "step",
            "step": "Static Gain 81",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1200",
            "positionY": "2010"
        },
        {
            "type": "step",
            "step": "Static Gain 83",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1200",
            "positionY": "1110"
        },
        {
            "type": "step",
            "step": "Static Gain 84",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1170",
            "positionY": "1230"
        },
        {
            "type": "step",
            "step": "Static Gain 85",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1170",
            "positionY": "1380"
        },
        {
            "type": "step",
            "step": "Static Gain 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8550",
            "positionY": "390"
        },
        {
            "type": "step",
            "step": "Static Gain 97",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-870",
            "positionY": "-30"
        },
        {
            "type": "step",
            "step": "Target",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-810",
            "positionY": "600"
        },
        {
            "type": "step",
            "step": "Target Blue Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1793.1684853855811",
            "positionY": "-402.25168938588291"
        },
        {
            "type": "step",
            "step": "Target Blue Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1559.957711106098",
            "positionY": "-401.08596135047748"
        },
        {
            "type": "step",
            "step": "Target Cyan Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1794.0270193247611",
            "positionY": "-312.21263704037892"
        },
        {
            "type": "step",
            "step": "Target Cyan Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1557.167176326499",
            "positionY": "-312.47599067599077"
        },
        {
            "type": "step",
            "step": "Target Green Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1798.2330691888751",
            "positionY": "-224.88305103498669"
        },
        {
            "type": "step",
            "step": "Target Green Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1558.103541619671",
            "positionY": "-218.15420332355811"
        },
        {
            "type": "step",
            "step": "Target Orange Memory ",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1798.5960078175881",
            "positionY": "-141.91073141911849"
        },
        {
            "type": "step",
            "step": "Target Orange Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1560",
            "positionY": "-120"
        },
        {
            "type": "step",
            "step": "Target Red Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1800",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Target Red Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-1590",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "Target: Blue",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1920",
            "positionY": "-390"
        },
        {
            "type": "step",
            "step": "Target: Cyan",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1920",
            "positionY": "-300"
        },
        {
            "type": "step",
            "step": "Target: Green",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1920",
            "positionY": "-240"
        },
        {
            "type": "step",
            "step": "Target: Orange",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1920",
            "positionY": "-150"
        },
        {
            "type": "step",
            "step": "Target: Red",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1920",
            "positionY": "-510"
        },
        {
            "type": "step",
            "step": "To the Right of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "750",
            "positionY": "1020"
        },
        {
            "type": "step",
            "step": "To the Right of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "960",
            "positionY": "1020"
        },
        {
            "type": "step",
            "step": "To the left of Memory",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "750",
            "positionY": "1140"
        },
        {
            "type": "step",
            "step": "To the left of Production",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "960",
            "positionY": "1140"
        },
        {
            "type": "step",
            "step": "True \/ False",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9360",
            "positionY": "2100"
        },
        {
            "type": "step",
            "step": "Wipe Node",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-8310",
            "positionY": "2970"
        },
        {
            "type": "trigger",
            "trigger": "default trigger",
            "width": "30",
            "height": "30",
            "positionX": "0",
            "positionY": "0"
        },
        {
            "type": "step",
            "step": "new Static Gain 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8400",
            "positionY": "3030"
        },
        {
            "type": "step",
            "step": "new Static Gain 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "2700"
        },
        {
            "type": "step",
            "step": "new Static Gain 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-7980",
            "positionY": "2940"
        },
        {
            "type": "step",
            "step": "new Static Gain 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "2760"
        },
        {
            "type": "step",
            "step": "new Static Gain 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "2820"
        },
        {
            "type": "step",
            "step": "new Static Gain 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "2910"
        },
        {
            "type": "step",
            "step": "new Static Gain 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "3120"
        },
        {
            "type": "step",
            "step": "new Static Gain 33",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-7980",
            "positionY": "3180"
        },
        {
            "type": "step",
            "step": "new Static Gain 34",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-7980",
            "positionY": "3090"
        },
        {
            "type": "step",
            "step": "new Static Gain 35",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-7980",
            "positionY": "3000"
        },
        {
            "type": "step",
            "step": "new Static Gain 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1410",
            "positionY": "780"
        },
        {
            "type": "step",
            "step": "new Static Gain 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8400",
            "positionY": "2970"
        },
        {
            "type": "step",
            "step": "new Static Gain 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-8370",
            "positionY": "2610"
        },
        {
            "type": "step",
            "step": "node 2",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9420",
            "positionY": "2640"
        },
        {
            "type": "step",
            "step": "node 3",
            "display style": "ICON_AND_TEXT",
            "width": "160",
            "height": "50",
            "positionX": "-9090",
            "positionY": "2640"
        }
    ],
    "ui view": {
        "ScrollBarX": "-805",
        "ScrollBarY": "255",
        "SliderPosX": "-805",
        "SliderPosY": "255",
        "Zoom": "0.53000000000000003"
    },
    "ui generic": {
        "group": "",
        "open plots": "",
        "plot groups": "",
        "architecture widgets": {
            "plotting": "mental_imagery_plot_widget.json"
        },
        "robots": "",
        "width": "250",
        "height": "250",
        "smart mode": "false",
        "collapsed": "false",
        "lock geometry": "false",
        "uncollapsed width": "250",
        "uncollapsed height": "250",
        "positionX": "0",
        "positionY": "0"
    }
}
